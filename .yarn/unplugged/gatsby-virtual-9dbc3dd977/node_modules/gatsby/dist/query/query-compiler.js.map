{"version":3,"file":"query-compiler.js","names":["_","require","path","normalize","glob","validate","print","visit","visitWithTypeInfo","TypeInfo","isAbstractType","Kind","FragmentsOnCompositeTypesRule","LoneAnonymousOperationRule","PossibleFragmentSpreadsRule","ScalarLeafsRule","ValuesOfCorrectTypeRule","VariablesAreInputTypesRule","VariablesInAllowedPositionRule","store","default","FileParser","graphqlError","multipleRootQueriesError","duplicateFragmentError","unknownFragmentError","report","errorParser","locInGraphQlToLocInFile","overlayErrorID","compile","parentSpan","program","schema","flattenedPlugins","getState","activity","activityTimer","id","start","errors","addError","push","bind","parsedQueries","parseQueries","base","directory","additional","resolveThemes","map","plugin","themeDir","pluginFilepath","span","queries","processQueries","length","structuredErrors","panicOnBuild","process","env","gatsby_executing_command","websocketManager","emitError","end","themes","reduce","merged","theme","filesRegex","pathRegex","modulesThatUseGatsby","getGatsbyDependents","files","join","module","folderPath","sync","nodir","filter","d","match","concat","Array","from","components","keys","c","uniq","parser","parseFiles","definitionsByName","operations","extractOperations","dispatch","actions","setGraphQLDefinitions","processDefinitions","preValidationRules","Map","filePath","text","templateLoc","hash","doc","isHook","isStaticQuery","isConfigQuery","error","location","locations","message","queryExtractionGraphQLError","componentPath","definitions","forEach","def","name","value","printedAst","kind","OPERATION_DEFINITION","templatePath","getPathToLayoutComponent","FRAGMENT_DEFINITION","has","otherDef","get","leftDefinition","rightDefinition","delete","set","isFragment","processedQueries","fragmentsUsedByFragment","fragmentNames","entries","operation","originalDefinition","usedFragments","missingFragments","determineUsedFragmentsForDefinition","definition","node","document","DOCUMENT","values","formattedMessage","printedDocument","otherQuery","query","originalText","String","kebabCase","relative","NODE_ENV","useContext","traversalPath","cachedUsedFragments","Set","FRAGMENT_SPREAD","fragmentDefinition","includes","add","usedFragmentsForFragment","missingFragmentsForFragment","pop","fragmentName"],"sources":["../../src/query/query-compiler.js"],"sourcesContent":["// @flow\n\n/** Query compiler extracts queries and fragments from all files, validates them\n * and then collocates them with fragments they require. This way fragments\n * have global scope and can be used in any other query or fragment.\n */\n\nconst _ = require(`lodash`)\n\nconst path = require(`path`)\nconst normalize = require(`normalize-path`)\nconst glob = require(`glob`)\n\nconst {\n  validate,\n  print,\n  visit,\n  visitWithTypeInfo,\n  TypeInfo,\n  isAbstractType,\n  Kind,\n  FragmentsOnCompositeTypesRule,\n  LoneAnonymousOperationRule,\n  PossibleFragmentSpreadsRule,\n  ScalarLeafsRule,\n  ValuesOfCorrectTypeRule,\n  VariablesAreInputTypesRule,\n  VariablesInAllowedPositionRule,\n} = require(`graphql`)\n\nimport { getGatsbyDependents } from \"../utils/gatsby-dependents\"\nconst { store } = require(`../redux`)\nimport { actions } from \"../redux/actions\"\n\nimport { websocketManager } from \"../utils/websocket-manager\"\nimport { getPathToLayoutComponent } from \"gatsby-core-utils\"\nconst { default: FileParser } = require(`./file-parser`)\nconst {\n  graphqlError,\n  multipleRootQueriesError,\n  duplicateFragmentError,\n  unknownFragmentError,\n} = require(`./graphql-errors`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst {\n  default: errorParser,\n  locInGraphQlToLocInFile,\n} = require(`./error-parser`)\n\nconst overlayErrorID = `graphql-compiler`\n\nexport default async function compile({ parentSpan } = {}): Promise<\n  Map<string, RootQuery>\n> {\n  const { program, schema, flattenedPlugins } = store.getState()\n\n  const activity = report.activityTimer(`extract queries from components`, {\n    parentSpan,\n    id: `query-extraction`,\n  })\n  activity.start()\n\n  const errors = []\n  const addError = errors.push.bind(errors)\n\n  const parsedQueries = await parseQueries({\n    base: program.directory,\n    additional: resolveThemes(\n      flattenedPlugins.map(plugin => {\n        return {\n          themeDir: plugin.pluginFilepath,\n        }\n      })\n    ),\n    addError,\n    parentSpan: activity.span,\n  })\n\n  const queries = processQueries({\n    schema,\n    parsedQueries,\n    addError,\n    parentSpan: activity.span,\n  })\n\n  if (errors.length !== 0) {\n    const structuredErrors = activity.panicOnBuild(errors)\n    if (process.env.gatsby_executing_command === `develop`) {\n      websocketManager.emitError(overlayErrorID, structuredErrors)\n    }\n  } else {\n    if (process.env.gatsby_executing_command === `develop`) {\n      // emitError with `null` as 2nd param to clear browser error overlay\n      websocketManager.emitError(overlayErrorID, null)\n    }\n  }\n  activity.end()\n\n  return queries\n}\n\nexport const resolveThemes = (themes = []) =>\n  themes.reduce((merged, theme) => {\n    merged.push(theme.themeDir)\n    return merged\n  }, [])\n\nexport const parseQueries = async ({\n  base,\n  additional,\n  addError,\n  parentSpan,\n}) => {\n  const filesRegex = `*.+(t|j)s?(x)`\n  // Pattern that will be appended to searched directories.\n  // It will match any .js, .jsx, .ts, and .tsx files, that are not\n  // inside <searched_directory>/node_modules.\n  const pathRegex = `/{${filesRegex},!(node_modules)/**/${filesRegex}}`\n\n  const modulesThatUseGatsby = await getGatsbyDependents()\n\n  let files = [\n    path.join(base, `src`),\n    path.join(base, `.cache`, `fragments`),\n    ...additional.map(additional => path.join(additional, `src`)),\n    ...modulesThatUseGatsby.map(module => module.path),\n  ].reduce((merged, folderPath) => {\n    merged.push(\n      ...glob.sync(path.join(folderPath, pathRegex), {\n        nodir: true,\n      })\n    )\n    return merged\n  }, [])\n\n  files = files.filter(d => !d.match(/\\.d\\.ts$/))\n\n  files = files.map(normalize)\n\n  // We should be able to remove the following and preliminary tests do suggest\n  // that they aren't needed anymore since we transpile node_modules now\n  // However, there could be some cases (where a page is outside of src for example)\n  // that warrant keeping this and removing later once we have more confidence (and tests)\n\n  // Ensure all page components added as they're not necessarily in the\n  // pages directory e.g. a plugin could add a page component. Plugins\n  // *should* copy their components (if they add a query) to .cache so that\n  // our babel plugin to remove the query on building is active.\n  // Otherwise the component will throw an error in the browser of\n  // \"graphql is not defined\".\n  files = files.concat(\n    Array.from(store.getState().components.keys(), c => normalize(c))\n  )\n\n  files = _.uniq(files)\n\n  const parser = new FileParser({ parentSpan: parentSpan })\n\n  return await parser.parseFiles(files, addError)\n}\n\nexport const processQueries = ({\n  schema,\n  parsedQueries,\n  addError,\n  parentSpan,\n}) => {\n  const { definitionsByName, operations } = extractOperations(\n    schema,\n    parsedQueries,\n    addError,\n    parentSpan\n  )\n\n  store.dispatch(actions.setGraphQLDefinitions(definitionsByName))\n\n  return processDefinitions({\n    schema,\n    operations,\n    definitionsByName,\n    addError,\n    parentSpan,\n  })\n}\n\nconst preValidationRules = [\n  LoneAnonymousOperationRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  PossibleFragmentSpreadsRule,\n  ValuesOfCorrectTypeRule,\n  VariablesInAllowedPositionRule,\n]\n\nconst extractOperations = (schema, parsedQueries, addError, parentSpan) => {\n  const definitionsByName = new Map()\n  const operations = []\n\n  for (const {\n    filePath,\n    text,\n    templateLoc,\n    hash,\n    doc,\n    isHook,\n    isStaticQuery,\n    isConfigQuery,\n  } of parsedQueries) {\n    const errors = validate(schema, doc, preValidationRules)\n\n    if (errors && errors.length) {\n      addError(\n        ...errors.map(error => {\n          const location = {\n            start: locInGraphQlToLocInFile(templateLoc, error.locations[0]),\n          }\n          return errorParser({\n            message: error.message,\n            filePath,\n            location,\n            error,\n          })\n        })\n      )\n\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: filePath,\n        })\n      )\n      // Something is super wrong with this document, so we report it and skip\n      continue\n    }\n\n    doc.definitions.forEach((def: any) => {\n      const name = def.name.value\n      let printedAst = null\n      if (def.kind === Kind.OPERATION_DEFINITION) {\n        operations.push({\n          def,\n          filePath,\n          templatePath: getPathToLayoutComponent(filePath),\n          hash,\n        })\n      } else if (def.kind === Kind.FRAGMENT_DEFINITION) {\n        // Check if we already registered a fragment with this name\n        printedAst = print(def)\n        if (definitionsByName.has(name)) {\n          const otherDef = definitionsByName.get(name)\n          // If it's not an accidental duplicate fragment, but is a different\n          // one - we report an error\n          if (printedAst !== otherDef.printedAst) {\n            addError(\n              duplicateFragmentError({\n                name,\n                leftDefinition: {\n                  def,\n                  filePath,\n                  text,\n                  templateLoc,\n                },\n                rightDefinition: otherDef,\n              })\n            )\n            // We won't know which one to use, so it's better to fail both of\n            // them.\n            definitionsByName.delete(name)\n          }\n          return\n        }\n      }\n\n      definitionsByName.set(name, {\n        name,\n        def,\n        filePath,\n        text: text,\n        templateLoc,\n        printedAst,\n        isHook,\n        isStaticQuery,\n        isConfigQuery,\n        isFragment: def.kind === Kind.FRAGMENT_DEFINITION,\n        hash: hash,\n        templatePath: getPathToLayoutComponent(filePath),\n      })\n    })\n  }\n\n  return {\n    definitionsByName,\n    operations,\n  }\n}\n\nconst processDefinitions = ({\n  schema,\n  operations,\n  definitionsByName,\n  addError,\n  parentSpan,\n}) => {\n  const processedQueries: Queries = new Map()\n\n  const fragmentsUsedByFragment = new Map()\n\n  const fragmentNames = Array.from(definitionsByName.entries())\n    .filter(([_, def]) => def.isFragment)\n    .map(([name, _]) => name)\n\n  for (const operation of operations) {\n    const { filePath, templatePath, def } = operation\n    const name = def.name.value\n    const originalDefinition = definitionsByName.get(name)\n\n    const { usedFragments, missingFragments } =\n      determineUsedFragmentsForDefinition(\n        originalDefinition,\n        definitionsByName,\n        fragmentsUsedByFragment\n      )\n\n    if (missingFragments.length > 0) {\n      for (const { filePath, definition, node } of missingFragments) {\n        store.dispatch(\n          actions.queryExtractionGraphQLError({\n            componentPath: filePath,\n          })\n        )\n        addError(\n          unknownFragmentError({\n            fragmentNames,\n            filePath,\n            definition,\n            node,\n          })\n        )\n      }\n      continue\n    }\n\n    const document = {\n      kind: Kind.DOCUMENT,\n      definitions: Array.from(usedFragments.values())\n        .map(name => definitionsByName.get(name).def)\n        .concat([operation.def]),\n    }\n\n    const errors = validate(schema, document)\n\n    if (errors && errors.length) {\n      for (const error of errors) {\n        const { formattedMessage, message } = graphqlError(\n          definitionsByName,\n          error\n        )\n\n        const filePath = originalDefinition.filePath\n        store.dispatch(\n          actions.queryExtractionGraphQLError({\n            componentPath: filePath,\n            error: formattedMessage,\n          })\n        )\n        const location = locInGraphQlToLocInFile(\n          originalDefinition.templateLoc,\n          error.locations[0]\n        )\n        addError(\n          errorParser({\n            location: {\n              start: location,\n              end: location,\n            },\n            message,\n            filePath,\n            error,\n          })\n        )\n      }\n      continue\n    }\n\n    const printedDocument = print(document)\n    // Check for duplicate page/static queries in the same component.\n    // (config query is not a duplicate of page/static query in the component)\n    // TODO: make sure there is at most one query type per component (e.g. one config + one page)\n    if (processedQueries.has(filePath) && !originalDefinition.isConfigQuery) {\n      const otherQuery = processedQueries.get(filePath)\n\n      if (\n        templatePath !== otherQuery.templatePath ||\n        printedDocument !== otherQuery.text\n      ) {\n        addError(\n          multipleRootQueriesError(\n            filePath,\n            originalDefinition.def,\n            otherQuery && definitionsByName.get(otherQuery.name).def\n          )\n        )\n\n        store.dispatch(\n          actions.queryExtractionGraphQLError({\n            componentPath: filePath,\n          })\n        )\n        continue\n      }\n    }\n\n    const query = {\n      name,\n      text: printedDocument,\n      originalText: originalDefinition.text,\n      path: filePath,\n      isHook: originalDefinition.isHook,\n      isStaticQuery: originalDefinition.isStaticQuery,\n      isConfigQuery: originalDefinition.isConfigQuery,\n      templatePath,\n      // ensure hash should be a string and not a number\n      hash: String(originalDefinition.hash),\n    }\n\n    if (query.isStaticQuery) {\n      query.id =\n        `sq--` +\n        _.kebabCase(\n          `${path.relative(store.getState().program.directory, filePath)}`\n        )\n    }\n\n    if (\n      query.isHook &&\n      process.env.NODE_ENV === `production` &&\n      typeof require(`react`).useContext !== `function`\n    ) {\n      report.panicOnBuild(\n        `You're likely using a version of React that doesn't support Hooks\\n` +\n          `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n      )\n    }\n\n    // Our current code only supports single graphql query per file (page or static query per file)\n    // So, not adding config query because it can overwrite existing page query\n    // TODO: allow multiple queries in single file, while preserving limitation of a single page query per file\n    if (!query.isConfigQuery) {\n      processedQueries.set(filePath, query)\n    }\n  }\n\n  return processedQueries\n}\n\nconst determineUsedFragmentsForDefinition = (\n  definition,\n  definitionsByName,\n  fragmentsUsedByFragment,\n  traversalPath = []\n) => {\n  const { def, name, isFragment, filePath } = definition\n  const cachedUsedFragments = fragmentsUsedByFragment.get(name)\n  if (cachedUsedFragments) {\n    return { usedFragments: cachedUsedFragments, missingFragments: [] }\n  } else {\n    const usedFragments = new Set()\n    const missingFragments = []\n    visit(def, {\n      [Kind.FRAGMENT_SPREAD]: node => {\n        const name = node.name.value\n        const fragmentDefinition = definitionsByName.get(name)\n        if (fragmentDefinition) {\n          if (traversalPath.includes(name)) {\n            // Already visited this fragment during current traversal.\n            //   Visiting it again will cause a stack overflow\n            return\n          }\n          traversalPath.push(name)\n          usedFragments.add(name)\n          const {\n            usedFragments: usedFragmentsForFragment,\n            missingFragments: missingFragmentsForFragment,\n          } = determineUsedFragmentsForDefinition(\n            fragmentDefinition,\n            definitionsByName,\n            fragmentsUsedByFragment,\n            traversalPath\n          )\n          traversalPath.pop()\n          usedFragmentsForFragment.forEach(fragmentName =>\n            usedFragments.add(fragmentName)\n          )\n          missingFragments.push(...missingFragmentsForFragment)\n        } else {\n          missingFragments.push({\n            filePath,\n            definition,\n            node,\n          })\n        }\n      },\n    })\n    if (isFragment) {\n      fragmentsUsedByFragment.set(name, usedFragments)\n    }\n    return { usedFragments, missingFragments }\n  }\n}\n"],"mappings":"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"}