{"version":3,"file":"get-ssr-chunk-hashes.js","names":["getHashes","chunkGroup","compilation","hashes","chunk","chunks","hash","Error","push","childChunkGroups","Object","values","getChildrenByOrders","moduleGraph","chunkGraph","childChunkGroup","getSSRChunkHashes","stats","components","templateHashes","componentChunkNameToTemplatePath","renderPageHash","forEach","component","componentChunkName","componentPath","chunkGroups","name","concenatedChunksByName","join","templatePath"],"sources":["../../../src/utils/webpack/get-ssr-chunk-hashes.ts"],"sourcesContent":["import type webpack from \"webpack\"\nimport type { IGatsbyState } from \"../../internal\"\n\ntype ChunkGroup = webpack.Compilation[\"chunkGroups\"][0]\n\nfunction getHashes(\n  chunkGroup: ChunkGroup,\n  compilation: webpack.Compilation,\n  hashes: Array<string> = []\n): Array<string> {\n  for (const chunk of chunkGroup.chunks) {\n    if (!chunk.hash) {\n      throw new Error(\n        `Invariant: [generating template hashes] Chunk doesn't have hash`\n      )\n    }\n    hashes.push(chunk.hash)\n  }\n\n  for (const childChunkGroups of Object.values(\n    chunkGroup.getChildrenByOrders(\n      compilation.moduleGraph,\n      compilation.chunkGraph\n    )\n  )) {\n    for (const childChunkGroup of childChunkGroups) {\n      getHashes(childChunkGroup, compilation, hashes)\n    }\n  }\n  return hashes\n}\n\nexport function getSSRChunkHashes({\n  stats,\n  components,\n}: {\n  stats: webpack.Stats\n  components: IGatsbyState[\"components\"]\n}): {\n  templateHashes: Record<string, string>\n  renderPageHash: string\n} {\n  const templateHashes: Record<string, string> = {}\n  const componentChunkNameToTemplatePath: Record<string, string> = {}\n  let renderPageHash = ``\n\n  components.forEach(component => {\n    componentChunkNameToTemplatePath[component.componentChunkName] =\n      component.componentPath\n  })\n\n  for (const chunkGroup of stats.compilation.chunkGroups) {\n    if (chunkGroup.name) {\n      const concenatedChunksByName = getHashes(\n        chunkGroup,\n        stats.compilation\n      ).join(`--`)\n\n      if (chunkGroup.name !== `render-page`) {\n        const templatePath = componentChunkNameToTemplatePath[chunkGroup.name]\n        if (!templatePath) {\n          // additional chunk group can be created by lazy imports\n          // we handle them by handling children chunk groups on top level ones\n          continue\n        }\n        templateHashes[templatePath] = concenatedChunksByName\n      } else {\n        renderPageHash = concenatedChunksByName\n      }\n    }\n  }\n\n  return { templateHashes, renderPageHash }\n}\n"],"mappings":";;;;;AAKA,SAASA,SAAT,CACEC,UADF,EAEEC,WAFF,EAGEC,MAAqB,GAAG,EAH1B,EAIiB;EACf,KAAK,MAAMC,KAAX,IAAoBH,UAAU,CAACI,MAA/B,EAAuC;IACrC,IAAI,CAACD,KAAK,CAACE,IAAX,EAAiB;MACf,MAAM,IAAIC,KAAJ,CACH,iEADG,CAAN;IAGD;;IACDJ,MAAM,CAACK,IAAP,CAAYJ,KAAK,CAACE,IAAlB;EACD;;EAED,KAAK,MAAMG,gBAAX,IAA+BC,MAAM,CAACC,MAAP,CAC7BV,UAAU,CAACW,mBAAX,CACEV,WAAW,CAACW,WADd,EAEEX,WAAW,CAACY,UAFd,CAD6B,CAA/B,EAKG;IACD,KAAK,MAAMC,eAAX,IAA8BN,gBAA9B,EAAgD;MAC9CT,SAAS,CAACe,eAAD,EAAkBb,WAAlB,EAA+BC,MAA/B,CAAT;IACD;EACF;;EACD,OAAOA,MAAP;AACD;;AAEM,SAASa,iBAAT,CAA2B;EAChCC,KADgC;EAEhCC;AAFgC,CAA3B,EASL;EACA,MAAMC,cAAsC,GAAG,EAA/C;EACA,MAAMC,gCAAwD,GAAG,EAAjE;EACA,IAAIC,cAAc,GAAI,EAAtB;EAEAH,UAAU,CAACI,OAAX,CAAmBC,SAAS,IAAI;IAC9BH,gCAAgC,CAACG,SAAS,CAACC,kBAAX,CAAhC,GACED,SAAS,CAACE,aADZ;EAED,CAHD;;EAKA,KAAK,MAAMxB,UAAX,IAAyBgB,KAAK,CAACf,WAAN,CAAkBwB,WAA3C,EAAwD;IACtD,IAAIzB,UAAU,CAAC0B,IAAf,EAAqB;MACnB,MAAMC,sBAAsB,GAAG5B,SAAS,CACtCC,UADsC,EAEtCgB,KAAK,CAACf,WAFgC,CAAT,CAG7B2B,IAH6B,CAGvB,IAHuB,CAA/B;;MAKA,IAAI5B,UAAU,CAAC0B,IAAX,KAAqB,aAAzB,EAAuC;QACrC,MAAMG,YAAY,GAAGV,gCAAgC,CAACnB,UAAU,CAAC0B,IAAZ,CAArD;;QACA,IAAI,CAACG,YAAL,EAAmB;UACjB;UACA;UACA;QACD;;QACDX,cAAc,CAACW,YAAD,CAAd,GAA+BF,sBAA/B;MACD,CARD,MAQO;QACLP,cAAc,GAAGO,sBAAjB;MACD;IACF;EACF;;EAED,OAAO;IAAET,cAAF;IAAkBE;EAAlB,CAAP;AACD"}