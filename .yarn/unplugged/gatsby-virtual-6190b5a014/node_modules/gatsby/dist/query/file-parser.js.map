{"version":3,"file":"file-parser.js","names":["fs","require","crypto","_","slugify","getGraphQLTag","StringInterpolationNotAllowedError","EmptyGraphQLTagError","GraphQLSyntaxError","ExportIsNotAsyncError","isWithinConfigExport","report","apiRunnerNode","actions","store","generateQueryName","def","hash","file","queryType","name","value","slugified","replacement","lower","camelCase","kind","followVariableDeclarations","binding","node","path","type","id","init","scope","getBinding","referencesGatsby","callee","calleeName","referencesImport","declaration","arguments","isUseStaticQuery","property","get","object","warnForUnknownQueryVariable","varName","usageFunction","warn","parseToAst","filePath","fileStr","parentSpan","addError","ast","cleanFilePath","getPathToLayoutComponent","transpiled","filename","contents","length","item","tmp","babelParseToAst","error","undefined","context","dispatch","queryExtractionGraphQLError","componentPath","queryExtractionBabelError","panicOnGlobalTag","panicOnBuild","findApiExport","api","hasExport","apiToFind","traverse","ExportNamedDeclaration","t","isExportNamedDeclaration","specifiers","some","specifier","isExportSpecifier","isIdentifier","exported","apiToCheck","isFunctionDeclaration","isVariableDeclaration","declarations","findGraphQLTags","documents","documentLocations","WeakMap","extractStaticQuery","taggedTemplateExpressPath","isHook","gqlAst","text","isGlobal","definitions","forEach","templateLoc","TemplateElement","templateElementPath","loc","docInFile","doc","isStaticQuery","isConfigQuery","set","start","push","JSXElement","openingElement","JSXAttribute","jsxPath","TaggedTemplateExpression","templatePath","Identifier","identifierPath","found","VariableDeclarator","varPath","CallExpression","hookPath","firstArg","isTaggedTemplateExpression","innerPath","state","source","ExportSpecifier","local","uniqueQueries","uniqBy","q","cache","FileParser","constructor","parseFile","cleanFilepath","readFile","err","includes","createHash","update","digest","astDefinitions","serverData","config","Head","pageSlices","collectSlices","payload","queryExtractedBabelSuccess","structuredError","location","interpolationStart","end","interpolationEnd","codeFrame","codeFrameColumns","highlightCode","process","env","FORCE_COLOR","locInGraphQlToLocInFile","originalError","locations","message","sourceMessage","exportStart","exportName","parseFiles","files","pageSliceUsage","Map","Promise","all","map","then","results"],"sources":["../../src/query/file-parser.js"],"sourcesContent":["/* eslint-disable no-unused-expressions */\n// @flow\nconst fs = require(`fs-extra`)\nconst crypto = require(`crypto`)\nconst _ = require(`lodash`)\nconst slugify = require(`slugify`)\n\n// Traverse is a es6 module...\nimport traverse from \"@babel/traverse\"\nimport * as t from \"@babel/types\"\nconst {\n  getGraphQLTag,\n  StringInterpolationNotAllowedError,\n  EmptyGraphQLTagError,\n  GraphQLSyntaxError,\n  ExportIsNotAsyncError,\n  isWithinConfigExport,\n} = require(`babel-plugin-remove-graphql-queries`)\nimport { collectSlices } from \"../utils/babel/find-slices\"\n\nconst report = require(`gatsby-cli/lib/reporter`)\n\nimport type { DocumentNode } from \"graphql\"\nimport { babelParseToAst } from \"../utils/babel-parse-to-ast\"\nimport { codeFrameColumns } from \"@babel/code-frame\"\nimport { getPathToLayoutComponent } from \"gatsby-core-utils\"\n\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst { actions } = require(`../redux/actions`)\nconst { store } = require(`../redux`)\nimport { locInGraphQlToLocInFile } from \"./error-parser\"\n/**\n * Add autogenerated query name if it wasn't defined by user.\n */\nconst generateQueryName = ({ def, hash, file, queryType }) => {\n  if (!def.name || !def.name.value) {\n    const slugified = slugify(file, {\n      replacement: ` `,\n      lower: false,\n    })\n    def.name = {\n      value: `${_.camelCase(`${queryType}-${slugified}-${hash}`)}`,\n      kind: `Name`,\n    }\n  }\n  return def\n}\n\n// taken from `babel-plugin-remove-graphql-queries`, in the future import from\n// there\nfunction followVariableDeclarations(binding) {\n  const node = binding?.path?.node\n  if (\n    node?.type === `VariableDeclarator` &&\n    node?.id.type === `Identifier` &&\n    node?.init?.type === `Identifier`\n  ) {\n    return followVariableDeclarations(\n      binding.path.scope.getBinding(node.init.name)\n    )\n  }\n  return binding\n}\n\nfunction referencesGatsby(path, callee, calleeName) {\n  // This works for es6 imports\n  if (callee.referencesImport(`gatsby`, ``)) {\n    return true\n  } else {\n    // This finds where userStaticQuery was declared and then checks\n    // if it is a \"require\" and \"gatsby\" is the argument.\n    const declaration = path.scope.getBinding(calleeName)\n    if (\n      declaration &&\n      declaration.path.node.init?.callee.name === `require` &&\n      declaration.path.node.init.arguments[0].value === `gatsby`\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n}\n\nfunction isUseStaticQuery(path) {\n  const callee = path.node.callee\n  if (callee.type === `MemberExpression`) {\n    const property = callee.property\n    if (property.name === `useStaticQuery`) {\n      return referencesGatsby(\n        path,\n        path.get(`callee`).get(`object`),\n        path.node?.callee.object.name\n      )\n    }\n    return false\n  }\n  if (callee.name === `useStaticQuery`) {\n    return referencesGatsby(path, path.get(`callee`), path.node?.callee.name)\n  }\n  return false\n}\n\nconst warnForUnknownQueryVariable = (varName, file, usageFunction) =>\n  report.warn(\n    `\\nWe were unable to find the declaration of variable \"${varName}\", which you passed as the \"query\" prop into the ${usageFunction} declaration in \"${file}\".\n\nPerhaps the variable name has a typo?\n\nAlso note that we are currently unable to use queries defined in files other than the file where the ${usageFunction} is defined. If you're attempting to import the query, please move it into \"${file}\". If being able to import queries from another file is an important capability for you, we invite your help fixing it.\\n`\n  )\n\nasync function parseToAst(filePath, fileStr, { parentSpan, addError } = {}) {\n  let ast\n\n  // Since gatsby-plugin-mdx v4, we are using the resourceQuery feature of webpack's loaders to inject a content file into a page component.\n  const cleanFilePath = getPathToLayoutComponent(filePath)\n\n  // Preprocess and attempt to parse source; return an AST if we can, log an\n  // error if we can't.\n  const transpiled = await apiRunnerNode(`preprocessSource`, {\n    filename: cleanFilePath,\n    contents: fileStr,\n    parentSpan,\n  })\n\n  if (transpiled && transpiled.length) {\n    for (const item of transpiled) {\n      try {\n        const tmp = babelParseToAst(item, cleanFilePath)\n        ast = tmp\n        break\n      } catch (error) {\n        // We emit the actual error below if every transpiled variant fails to parse\n      }\n    }\n    if (ast === undefined) {\n      addError({\n        id: `85912`,\n        filePath: cleanFilePath,\n        context: {\n          filePath,\n        },\n      })\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: cleanFilePath,\n        })\n      )\n\n      return null\n    }\n  } else {\n    try {\n      ast = babelParseToAst(fileStr, cleanFilePath)\n    } catch (error) {\n      store.dispatch(\n        actions.queryExtractionBabelError({\n          componentPath: cleanFilePath,\n          error,\n        })\n      )\n\n      addError({\n        id: `85911`,\n        filePath: cleanFilePath,\n        context: {\n          filePath: cleanFilePath,\n        },\n      })\n\n      return null\n    }\n  }\n\n  return ast\n}\n\nconst panicOnGlobalTag = file =>\n  report.panicOnBuild(\n    `Using the global \\`graphql\\` tag for Gatsby's queries isn't supported as of v3.\\n` +\n      `Import it instead like:  import { graphql } from 'gatsby' in file:\\n` +\n      file\n  )\n\ntype GraphQLDocumentInFile = {\n  filePath: string,\n  doc: DocumentNode,\n  templateLoc: string,\n  text: string,\n  hash: string,\n  isHook: boolean,\n  isStaticQuery: boolean,\n}\n\n// Adapted from gatsby/src/utils/babel/babel-plugin-remove-api\nfunction findApiExport(ast, api) {\n  let hasExport = false\n  const apiToFind = api ?? ``\n\n  traverse(ast, {\n    ExportNamedDeclaration(path) {\n      const declaration = path.node.declaration\n\n      if (t.isExportNamedDeclaration(path.node) && !hasExport) {\n        hasExport = path.node.specifiers.some(\n          specifier =>\n            t.isExportSpecifier(specifier) &&\n            t.isIdentifier(specifier.exported) &&\n            specifier.exported.name === apiToFind\n        )\n      }\n\n      let apiToCheck\n      if (t.isFunctionDeclaration(declaration) && declaration.id) {\n        apiToCheck = declaration.id.name\n      }\n\n      if (\n        t.isVariableDeclaration(declaration) &&\n        t.isIdentifier(declaration.declarations[0].id)\n      ) {\n        apiToCheck = declaration.declarations[0].id.name\n      }\n\n      if (apiToCheck && apiToCheck === apiToFind) {\n        hasExport = true\n      }\n    },\n  })\n\n  return hasExport\n}\n\nasync function findGraphQLTags(\n  file,\n  ast,\n  { parentSpan, addError } = {}\n): Promise<Array<GraphQLDocumentInFile>> {\n  const documents = []\n  if (!ast) {\n    return documents\n  }\n\n  /**\n   * A map of graphql documents to unique locations.\n   *\n   * A graphql document's unique location is made of:\n   *\n   *  - the location of the graphql template literal that contains the document, and\n   *  - the document's location within the graphql template literal\n   *\n   * This is used to prevent returning duplicated documents.\n   */\n  const documentLocations = new WeakMap()\n\n  const extractStaticQuery = (taggedTemplateExpressPath, isHook = false) => {\n    const {\n      ast: gqlAst,\n      text,\n      hash,\n      isGlobal,\n    } = getGraphQLTag(taggedTemplateExpressPath)\n    if (!gqlAst) return\n\n    if (isGlobal) {\n      panicOnGlobalTag(file)\n      return\n    }\n\n    gqlAst.definitions.forEach(def => {\n      generateQueryName({\n        def,\n        hash,\n        file,\n        queryType: `static`,\n      })\n    })\n\n    let templateLoc\n\n    taggedTemplateExpressPath.traverse({\n      TemplateElement(templateElementPath) {\n        templateLoc = templateElementPath.node.loc\n      },\n    })\n\n    const docInFile = {\n      filePath: file,\n      doc: gqlAst,\n      text: text,\n      hash: hash,\n      isStaticQuery: true,\n      isConfigQuery: false,\n      isHook,\n      templateLoc,\n    }\n\n    documentLocations.set(\n      docInFile,\n      `${taggedTemplateExpressPath.node.start}-${gqlAst.loc.start}`\n    )\n\n    documents.push(docInFile)\n  }\n\n  // Look for queries in <StaticQuery /> elements.\n  traverse(ast, {\n    JSXElement(path) {\n      if (path.node.openingElement.name.name !== `StaticQuery`) {\n        return\n      }\n\n      // astexplorer.com link I (@kyleamathews) used when prototyping this algorithm\n      // https://astexplorer.net/#/gist/ab5d71c0f08f287fbb840bf1dd8b85ff/2f188345d8e5a4152fe7c96f0d52dbcc6e9da466\n      path.traverse({\n        JSXAttribute(jsxPath) {\n          if (jsxPath.node.name.name !== `query`) {\n            return\n          }\n          jsxPath.traverse({\n            // Assume the query is inline in the component and extract that.\n            TaggedTemplateExpression(templatePath) {\n              extractStaticQuery(templatePath)\n            },\n            // Also see if it's a variable that's passed in as a prop\n            // and if it is, go find it.\n            Identifier(identifierPath) {\n              if (identifierPath.node.name !== `graphql`) {\n                const varName = identifierPath.node.name\n                let found = false\n                traverse(ast, {\n                  VariableDeclarator(varPath) {\n                    if (\n                      varPath.node.id.name === varName &&\n                      varPath.node.init.type === `TaggedTemplateExpression`\n                    ) {\n                      varPath.traverse({\n                        TaggedTemplateExpression(templatePath) {\n                          found = true\n                          extractStaticQuery(templatePath)\n                        },\n                      })\n                    }\n                  },\n                })\n                if (!found) {\n                  warnForUnknownQueryVariable(varName, file, `<StaticQuery>`)\n                }\n              }\n            },\n          })\n        },\n      })\n      return\n    },\n  })\n\n  // Look for queries in useStaticQuery hooks.\n  traverse(ast, {\n    CallExpression(hookPath) {\n      if (!isUseStaticQuery(hookPath)) return\n\n      const firstArg = hookPath.get(`arguments`)[0]\n\n      // Assume the query is inline in the component and extract that.\n      if (firstArg.isTaggedTemplateExpression()) {\n        extractStaticQuery(firstArg, true)\n        // Also see if it's a variable that's passed in as a prop\n        // and if it is, go find it.\n      } else if (firstArg.isIdentifier()) {\n        if (\n          firstArg.node.name !== `graphql` &&\n          firstArg.node.name !== `useStaticQuery`\n        ) {\n          const varName = firstArg.node.name\n          let found = false\n          traverse(ast, {\n            VariableDeclarator(varPath) {\n              if (\n                varPath.node.id.name === varName &&\n                varPath.node.init.type === `TaggedTemplateExpression`\n              ) {\n                varPath.traverse({\n                  TaggedTemplateExpression(templatePath) {\n                    found = true\n                    extractStaticQuery(templatePath, true)\n                  },\n                })\n              }\n            },\n          })\n          if (!found) {\n            warnForUnknownQueryVariable(varName, file, `useStaticQuery`)\n          }\n        }\n      }\n    },\n  })\n\n  function TaggedTemplateExpression(innerPath) {\n    const { ast: gqlAst, isGlobal, hash, text } = getGraphQLTag(innerPath)\n    if (!gqlAst) return\n\n    if (isGlobal) {\n      panicOnGlobalTag(file)\n      return\n    }\n\n    const isConfigQuery = isWithinConfigExport(innerPath)\n\n    gqlAst.definitions.forEach(def => {\n      generateQueryName({\n        def,\n        hash,\n        file,\n        queryType: isConfigQuery ? `config` : `page`,\n      })\n    })\n\n    let templateLoc\n    innerPath.traverse({\n      TemplateElement(templateElementPath) {\n        templateLoc = templateElementPath.node.loc\n      },\n    })\n\n    const docInFile = {\n      filePath: file,\n      doc: gqlAst,\n      text: text,\n      hash: hash,\n      isStaticQuery: false,\n      isConfigQuery,\n      isHook: false,\n      templateLoc,\n    }\n\n    documentLocations.set(\n      docInFile,\n      `${innerPath.node.start}-${gqlAst.loc.start}`\n    )\n\n    documents.push(docInFile)\n  }\n\n  // When a component has a StaticQuery we scan all of its exports and follow those exported variables\n  // to determine if they lead to this static query (via tagged template literal)\n  traverse(ast, {\n    ExportNamedDeclaration(path, state) {\n      // Skipping the edge case of re-exporting (i.e. \"export { bar } from 'Bar'\")\n      // (it is handled elsewhere for queries, see usages of warnForUnknownQueryVariable)\n      if (path.node.source) {\n        return\n      }\n      path.traverse({\n        TaggedTemplateExpression,\n        ExportSpecifier(path) {\n          const binding = followVariableDeclarations(\n            path.scope.getBinding(path.node.local.name)\n          )\n          binding?.path?.traverse({ TaggedTemplateExpression })\n        },\n      })\n    },\n  })\n\n  // Remove duplicate queries\n  const uniqueQueries = _.uniqBy(documents, q => documentLocations.get(q))\n\n  return uniqueQueries\n}\n\ntype CollectedSlice = {\n  name: string,\n  allowEmpty: boolean,\n}\n\nconst cache = {}\n\nexport default class FileParser {\n  constructor({ parentSpan } = {}) {\n    this.parentSpan = parentSpan\n  }\n\n  async parseFile(\n    file: string,\n    addError\n  ): Promise<{\n    astDefinitions: ?Array<GraphQLDocumentInFile>,\n    pageSlices: { [key: string]: CollectedSlice } | null,\n  }> {\n    let text\n    const cleanFilepath = getPathToLayoutComponent(file)\n    try {\n      text = await fs.readFile(cleanFilepath, `utf8`)\n    } catch (err) {\n      addError({\n        id: `85913`,\n        filePath: file,\n        context: {\n          filePath: file,\n        },\n        error: err,\n      })\n\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: file,\n        })\n      )\n      return null\n    }\n\n    // We do a quick check so we can exit early if this is a file we're not interested in.\n    // We only process files that include the APIs below\n    if (\n      !text.includes(`graphql`) &&\n      !text.includes(`gatsby-plugin-image`) &&\n      !text.includes(`getServerData`) &&\n      !text.includes(`config`) &&\n      !text.includes(`Slice`)\n    ) {\n      return null\n    }\n\n    const hash = crypto\n      .createHash(`md5`)\n      .update(file)\n      .update(text)\n      .digest(`hex`)\n\n    try {\n      if (!cache[hash]) {\n        const ast = await parseToAst(file, text, {\n          parentSpan: this.parentSpan,\n          addError,\n        })\n\n        cache[hash] = {\n          astDefinitions: await findGraphQLTags(file, ast, {\n            parentSpan: this.parentSpan,\n            addError,\n          }),\n          serverData: findApiExport(ast, `getServerData`),\n          config: findApiExport(ast, `config`),\n          Head: findApiExport(ast, `Head`),\n          pageSlices: collectSlices(ast, file),\n        }\n      }\n      const { astDefinitions, serverData, config, Head, pageSlices } =\n        cache[hash]\n\n      // Note: we should dispatch this action even when getServerData is not found\n      // (maybe it was set before, so now we need to reset renderMode from SSR to the default one)\n      store.dispatch({\n        type: `SET_COMPONENT_FEATURES`,\n        payload: {\n          componentPath: file,\n          serverData,\n          config,\n          Head,\n        },\n      })\n\n      // If any AST definitions were extracted, report success.\n      // This can mean there is none or there was a babel error when\n      // we tried to extract the graphql AST.\n      if (astDefinitions.length > 0) {\n        store.dispatch(\n          actions.queryExtractedBabelSuccess({\n            componentPath: file,\n          })\n        )\n      }\n\n      return { astDefinitions, pageSlices }\n    } catch (err) {\n      // default error\n      let structuredError = {\n        id: `85915`,\n        context: {\n          filePath: file,\n        },\n      }\n\n      if (err instanceof StringInterpolationNotAllowedError) {\n        const location = {\n          start: err.interpolationStart,\n          end: err.interpolationEnd,\n        }\n        structuredError = {\n          id: `85916`,\n          location,\n          context: {\n            codeFrame: codeFrameColumns(text, location, {\n              highlightCode: process.env.FORCE_COLOR !== `0`,\n            }),\n          },\n        }\n      } else if (err instanceof EmptyGraphQLTagError) {\n        const location = err.templateLoc\n          ? {\n              start: err.templateLoc.start,\n              end: err.templateLoc.end,\n            }\n          : null\n\n        structuredError = {\n          id: `85917`,\n          location,\n          context: {\n            codeFrame: location\n              ? codeFrameColumns(text, location, {\n                  highlightCode: process.env.FORCE_COLOR !== `0`,\n                })\n              : null,\n          },\n        }\n      } else if (err instanceof GraphQLSyntaxError) {\n        const location = {\n          start: locInGraphQlToLocInFile(\n            err.templateLoc,\n            err.originalError.locations[0]\n          ),\n        }\n\n        structuredError = {\n          id: `85918`,\n          location,\n          context: {\n            codeFrame: location\n              ? codeFrameColumns(text, location, {\n                  highlightCode: process.env.FORCE_COLOR !== `0`,\n                  message: err.originalError.message,\n                })\n              : null,\n            sourceMessage: err.originalError.message,\n          },\n        }\n      } else if (err instanceof ExportIsNotAsyncError) {\n        const location = {\n          start: err.exportStart,\n          end: err.exportStart,\n        }\n        structuredError = {\n          id: `85929`,\n          location,\n          context: {\n            exportName: err.exportName,\n            codeFrame: codeFrameColumns(text, location, {\n              highlightCode: process.env.FORCE_COLOR !== `0`,\n            }),\n          },\n        }\n      }\n\n      addError({\n        ...structuredError,\n        filePath: file,\n      })\n\n      store.dispatch(\n        actions.queryExtractionGraphQLError({\n          componentPath: file,\n        })\n      )\n      return null\n    }\n  }\n\n  async parseFiles(\n    files: Array<string>,\n    addError\n  ): Promise<Array<GraphQLDocumentInFile>> {\n    const documents = []\n    const pageSliceUsage = new Map()\n\n    return Promise.all(\n      files.map(file =>\n        this.parseFile(file, addError).then(results => {\n          if (results) {\n            const { astDefinitions, pageSlices } = results\n            documents.push(...(astDefinitions || []))\n            if (pageSlices) {\n              pageSliceUsage.set(file, pageSlices)\n            }\n          }\n        })\n      )\n    ).then(() => {\n      store.dispatch({\n        type: `SET_COMPONENTS_USING_PAGE_SLICES`,\n        payload: pageSliceUsage,\n      })\n\n      return documents\n    })\n  }\n}\n"],"mappings":"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"}