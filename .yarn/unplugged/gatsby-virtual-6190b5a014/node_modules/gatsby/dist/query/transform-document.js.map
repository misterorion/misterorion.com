{"version":3,"file":"transform-document.js","names":["extractEnumValues","value","acc","hasValue","kind","graphql","Kind","ENUM","push","LIST","listItem","values","undefined","isOldSortObject","props","Array","isArray","hasFields","key","Object","entries","pathSegmentsToAst","path","split","reduceRight","previousNode","fieldPathSegment","OBJECT","fields","OBJECT_FIELD","name","NAME","processGraphQLQuery","query","hasChanged","ast","parse","visit","Argument","node","field","newObjects","i","length","order","err","Error","tranformDocument","error"],"sources":["../../src/query/transform-document.ts"],"sourcesContent":["import * as graphql from \"graphql\"\n\nfunction extractEnumValues(\n  value: graphql.ValueNode,\n  acc: Array<string> = []\n): undefined | Array<string> {\n  let hasValue = false\n  if (value.kind === graphql.Kind.ENUM) {\n    hasValue = true\n    acc.push(value.value)\n  } else if (value.kind === graphql.Kind.LIST) {\n    // list can be empty but it indicate that it is set at least\n    hasValue = true\n    for (const listItem of value.values) {\n      extractEnumValues(listItem, acc)\n    }\n  }\n  return hasValue ? acc : undefined\n}\n\ninterface IOldSortObject {\n  fields: Array<string>\n  order?: Array<\"ASC\" | \"DESC\">\n}\n\nfunction isOldSortObject(props: unknown): props is IOldSortObject {\n  if (!props || typeof props !== `object` || Array.isArray(props)) {\n    return false\n  }\n\n  let hasFields = false\n  // skip if there any unexpected keys\n  for (const [key, value] of Object.entries(props)) {\n    if (key === `fields`) {\n      if (value) {\n        hasFields = true\n      }\n    } else if (key !== `order`) {\n      return false\n    }\n  }\n\n  return hasFields\n}\n\nfunction pathSegmentsToAst(\n  path: string,\n  value: string\n): graphql.ObjectValueNode | graphql.EnumValueNode {\n  return path.split(`___`).reduceRight(\n    (previousNode, fieldPathSegment) => {\n      return {\n        kind: graphql.Kind.OBJECT,\n        fields: [\n          {\n            kind: graphql.Kind.OBJECT_FIELD,\n            name: {\n              kind: graphql.Kind.NAME,\n              value: fieldPathSegment,\n            },\n            value: previousNode,\n          },\n        ],\n      }\n    },\n    {\n      kind: graphql.Kind.ENUM,\n      value,\n    } as graphql.ObjectValueNode | graphql.EnumValueNode\n  )\n}\n\nfunction processGraphQLQuery(query: string | graphql.DocumentNode): {\n  ast: graphql.DocumentNode\n  hasChanged: boolean\n} {\n  try {\n    let hasChanged = false // this is sort of a hack, but print changes formatting and we only want to use it when we have to\n    const ast = typeof query === `string` ? graphql.parse(query) : query\n\n    graphql.visit(ast, {\n      Argument(node) {\n        if (node.name.value === `sort`) {\n          if (node.value.kind !== graphql.Kind.OBJECT) {\n            return\n          }\n\n          // old style sort: `allX(sort: { fields: <something>, order?: </something> })\n          const props: Record<string, Array<string> | undefined> = {}\n          for (const field of node.value.fields) {\n            props[field.name.value] = extractEnumValues(field.value)\n          }\n\n          if (!isOldSortObject(props)) {\n            return\n          }\n\n          // iterate over each pair of field and order and create new object style for each\n          const newObjects: Array<\n            graphql.ObjectValueNode | graphql.EnumValueNode\n          > = []\n          for (let i = 0; i < props.fields.length; i++) {\n            const field = props.fields[i]\n            const order = props.order?.[i] ?? `ASC`\n\n            newObjects.push(pathSegmentsToAst(field, order))\n          }\n\n          if (newObjects.length === 0) {\n            return\n          }\n\n          // @ts-ignore node.value apparently is read-only ...\n          node.value =\n            newObjects.length > 1\n              ? {\n                  kind: graphql.Kind.LIST,\n                  values: newObjects,\n                }\n              : newObjects[0]\n          hasChanged = true\n        } else if (node.name.value === `field`) {\n          if (node.value.kind !== graphql.Kind.ENUM) {\n            return\n          }\n\n          // @ts-ignore read-only ...\n          node.value = pathSegmentsToAst(node.value.value, `SELECT`)\n          hasChanged = true\n        }\n      },\n    })\n    return { ast, hasChanged }\n  } catch (err) {\n    throw new Error(\n      `GatsbySortAndAggrCodemod: GraphQL syntax error in query:\\n\\n${query}\\n\\nmessage:\\n\\n${err}`\n    )\n  }\n}\n\nexport function tranformDocument(ast: graphql.DocumentNode): {\n  ast: graphql.DocumentNode\n  hasChanged: boolean\n  error?: Error\n} {\n  if (_CFLAGS_.GATSBY_MAJOR === `5`) {\n    try {\n      return processGraphQLQuery(ast)\n    } catch (error) {\n      return { ast, hasChanged: false, error }\n    }\n  }\n  return { ast, hasChanged: false }\n}\n"],"mappings":"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"}