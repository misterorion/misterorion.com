{"version":3,"file":"pagination.js","names":["getPageInfo","schemaComposer","getOrCreateOTC","tc","addFields","currentPage","hasPreviousPage","hasNextPage","itemCount","pageCount","perPage","totalCount","getEdge","typeComposer","typeName","getTypeName","addDerivedType","derivedTypeName","next","node","getTypeNonNull","previous","getGroup","fields","field","fieldValue","createPagination","getPagination","getFieldSelectorTC","convertToNestedInputType","onEnter","fieldName","sortable","UnionTypeComposer","ScalarTypeComposer","undefined","getFieldExtension","SORTABLE_ENUM","NOT_SORTABLE","DEPRECATED_SORTABLE","deprecationReason","leafInputComposer","getOrCreateETC","etc","setFields","SELECT","value","postfix","inputTypeComposer","getInputTypeComposer","fieldsEnumTC","getFieldsEnum","fieldTC","paginationTypeComposer","aggregationFields","distinct","type","args","resolve","createDistinctResolver","max","createMaxResolver","min","createMinResolver","sum","createSumResolver","group","skip","limit","createGroupResolver","edges","nodes","pageInfo","makeFieldNonNull"],"sources":["../../../src/schema/types/pagination.ts"],"sourcesContent":["import {\n  SchemaComposer,\n  ObjectTypeComposer,\n  InputTypeComposer,\n  InterfaceTypeComposer,\n  ObjectTypeComposerFieldConfigMapDefinition,\n  UnionTypeComposer,\n  ScalarTypeComposer,\n  AnyTypeComposer,\n} from \"graphql-compose\"\nimport { getFieldsEnum } from \"./sort\"\nimport { addDerivedType } from \"./derived-types\"\nimport {\n  createDistinctResolver,\n  createGroupResolver,\n  createMaxResolver,\n  createMinResolver,\n  createSumResolver,\n} from \"../resolvers\"\nimport { convertToNestedInputType, IVisitContext } from \"./utils\"\nimport { SORTABLE_ENUM } from \"./sort\"\n\nexport const getPageInfo = <TContext = any>({\n  schemaComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n}): ObjectTypeComposer =>\n  schemaComposer.getOrCreateOTC(`PageInfo`, tc => {\n    tc.addFields({\n      currentPage: `Int!`,\n      hasPreviousPage: `Boolean!`,\n      hasNextPage: `Boolean!`,\n      itemCount: `Int!`,\n      pageCount: `Int!`,\n      perPage: `Int`,\n      totalCount: `Int!`,\n    })\n  })\n\nexport const getEdge = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}Edge`\n  addDerivedType({ typeComposer, derivedTypeName: typeName })\n  return schemaComposer.getOrCreateOTC(typeName, tc => {\n    tc.addFields({\n      next: typeComposer,\n      node: typeComposer.getTypeNonNull(),\n      previous: typeComposer,\n    })\n  })\n}\n\nexport const getGroup = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}GroupConnection`\n  const fields = {\n    field: `String!`,\n    fieldValue: `String`,\n  }\n  return createPagination({ schemaComposer, typeComposer, typeName, fields })\n}\n\nexport const getPagination = <TContext = any>({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): ObjectTypeComposer => {\n  const typeName = `${typeComposer.getTypeName()}Connection`\n  return createPagination({ schemaComposer, typeComposer, typeName })\n}\n\nfunction getFieldSelectorTC({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<any>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n}): AnyTypeComposer<any> {\n  if (_CFLAGS_.GATSBY_MAJOR === `5`) {\n    return convertToNestedInputType({\n      schemaComposer,\n      typeComposer,\n      onEnter: ({ fieldName, typeComposer }): IVisitContext => {\n        const sortable =\n          typeComposer instanceof UnionTypeComposer ||\n          typeComposer instanceof ScalarTypeComposer\n            ? undefined\n            : typeComposer.getFieldExtension(fieldName, `sortable`)\n        if (sortable === SORTABLE_ENUM.NOT_SORTABLE) {\n          // stop traversing\n          return null\n        } else if (sortable === SORTABLE_ENUM.DEPRECATED_SORTABLE) {\n          // mark this and all nested fields as deprecated\n          return {\n            deprecationReason: `Sorting on fields that need arguments to resolve is deprecated.`,\n          }\n        }\n\n        // continue\n        return undefined\n      },\n      leafInputComposer: schemaComposer.getOrCreateETC(\n        `FieldSelectorEnum`,\n        etc => {\n          etc.setFields({\n            // GraphQL spec doesn't allow using \"true\" (or \"false\" or \"null\") as enum values\n            // so we \"SELECT\"\n            SELECT: { value: `SELECT` },\n          })\n        }\n      ),\n      postfix: `FieldSelector`,\n    }).getTypeNonNull()\n  } else {\n    const inputTypeComposer: InputTypeComposer =\n      typeComposer.getInputTypeComposer()\n\n    const fieldsEnumTC = getFieldsEnum({\n      schemaComposer,\n      typeComposer,\n      inputTypeComposer,\n    })\n    return fieldsEnumTC.getTypeNonNull()\n  }\n}\n\nfunction createPagination<TSource = any, TContext = any>({\n  schemaComposer,\n  typeComposer,\n  fields,\n  typeName,\n}: {\n  schemaComposer: SchemaComposer<TContext>\n  typeComposer: ObjectTypeComposer | InterfaceTypeComposer\n  typeName: string\n  fields?: ObjectTypeComposerFieldConfigMapDefinition<TSource, TContext>\n}): ObjectTypeComposer {\n  const fieldTC = getFieldSelectorTC({ schemaComposer, typeComposer })\n\n  const paginationTypeComposer: ObjectTypeComposer =\n    schemaComposer.getOrCreateOTC(typeName, tc => {\n      // getGroup() will create a recursive call to pagination,\n      // so only add it and other aggregate functions on onCreate.\n      // Cast into their own category to avoid Typescript conflicts.\n      const aggregationFields: { [key: string]: any } = {\n        distinct: {\n          type: [`String!`],\n          args: {\n            field: fieldTC,\n          },\n          resolve: createDistinctResolver(typeComposer.getTypeName()),\n        },\n        max: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createMaxResolver(typeComposer.getTypeName()),\n        },\n        min: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createMinResolver(typeComposer.getTypeName()),\n        },\n        sum: {\n          type: `Float`,\n          args: {\n            field: fieldTC,\n          },\n          resolve: createSumResolver(typeComposer.getTypeName()),\n        },\n        group: {\n          type: [getGroup({ schemaComposer, typeComposer }).getTypeNonNull()],\n          args: {\n            skip: `Int`,\n            limit: `Int`,\n            field: fieldTC,\n          },\n          resolve: createGroupResolver(typeComposer.getTypeName()),\n        },\n      }\n\n      tc.addFields({\n        totalCount: `Int!`,\n        edges: [getEdge({ schemaComposer, typeComposer }).getTypeNonNull()],\n        nodes: [typeComposer.getTypeNonNull()],\n        pageInfo: getPageInfo({ schemaComposer }).getTypeNonNull(),\n        ...aggregationFields,\n        ...fields,\n      })\n    })\n  paginationTypeComposer.makeFieldNonNull(`edges`)\n  paginationTypeComposer.makeFieldNonNull(`nodes`)\n  paginationTypeComposer.makeFieldNonNull(`distinct`)\n  paginationTypeComposer.makeFieldNonNull(`group`)\n  addDerivedType({ typeComposer, derivedTypeName: typeName })\n  return paginationTypeComposer\n}\n"],"mappings":"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"}