{"version":3,"file":"page-data-helpers.js","names":["traverseSlicesUsedByTemplates","pagePath","componentPath","overrideSlices","slicesUsedByTemplates","slices","formattedSlices","handledSlices","Set","has","add","slicesUsedByComponent","get","sliceSlot","sliceConf","Object","entries","concreteSliceForSliceSlot","slice","allowEmpty","message","reporter","panicOnBuild","Error","constructPageDataString","componentChunkName","matchPath","path","staticQueryHashes","manifestId","result","body","JSON","stringify","process","env","GATSBY_SLICES","reverseFixedPagePath","pageDataRequestPath","getPagePathFromPageDataPath","pageDataPath","matches","matchAll","requestedPagePath"],"sources":["../../src/utils/page-data-helpers.ts"],"sourcesContent":["import reporter from \"gatsby-cli/lib/reporter\"\nimport type { IStructuredError } from \"gatsby-cli/src/structured-errors/types\"\nimport { IGatsbyPage, IGatsbyState } from \"../redux/types\"\nimport { ICollectedSlices } from \"./babel/find-slices\"\n\ninterface IPageDataBase {\n  componentChunkName: IGatsbyPage[\"componentChunkName\"]\n  matchPath: IGatsbyPage[\"matchPath\"]\n  path: IGatsbyPage[\"path\"]\n  staticQueryHashes: Array<string>\n  getServerDataError?: IStructuredError | Array<IStructuredError> | null\n  manifestId?: string\n}\nexport type IPageDataInput = IPageDataBase & {\n  slices: Record<string, string>\n  componentPath: string\n}\n\nexport type IPageData = IPageDataBase & {\n  slicesMap: Record<string, string>\n}\n\nfunction traverseSlicesUsedByTemplates(\n  pagePath: string,\n  componentPath: string,\n  overrideSlices: Record<string, string>,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"],\n  formattedSlices: Record<string, string> = {},\n  handledSlices: Set<string> = new Set<string>()\n): Record<string, string> | null {\n  if (handledSlices.has(componentPath)) {\n    return null\n  } else {\n    handledSlices.add(componentPath)\n  }\n\n  const slicesUsedByComponent = slicesUsedByTemplates.get(componentPath)\n  if (!slicesUsedByComponent) {\n    return null\n  }\n\n  for (const [sliceSlot, sliceConf] of Object.entries(slicesUsedByComponent)) {\n    let concreteSliceForSliceSlot = sliceSlot\n\n    if (overrideSlices && overrideSlices[sliceSlot]) {\n      concreteSliceForSliceSlot = overrideSlices[sliceSlot]\n    }\n\n    const slice = slices.get(concreteSliceForSliceSlot)\n    if (!slice) {\n      if (sliceConf.allowEmpty) {\n        continue\n      } else {\n        const message =\n          `Could not find slice \"${concreteSliceForSliceSlot}\" used by page \"${pagePath}\". ` +\n          `Please check your createPages in your gatsby-node to verify this ` +\n          `is the correct name or set allowEmpty to true.`\n\n        reporter.panicOnBuild(new Error(message))\n        continue\n      }\n    }\n\n    formattedSlices[sliceSlot] = concreteSliceForSliceSlot\n\n    // recursively repeat for found slice to find all nested slices\n    traverseSlicesUsedByTemplates(\n      pagePath,\n      slice.componentPath,\n      overrideSlices,\n      slicesUsedByTemplates,\n      slices,\n      formattedSlices,\n      handledSlices\n    )\n  }\n\n  return formattedSlices\n}\n\nexport function constructPageDataString(\n  {\n    componentChunkName,\n    componentPath,\n    matchPath,\n    path: pagePath,\n    staticQueryHashes,\n    manifestId,\n    slices: overrideSlices,\n  }: IPageDataInput,\n  result: string | Buffer,\n  slicesUsedByTemplates: Map<string, ICollectedSlices>,\n  slices: IGatsbyState[\"slices\"]\n): string {\n  let body =\n    `{` +\n    `\"componentChunkName\":\"${componentChunkName}\",` +\n    (pagePath ? `\"path\":${JSON.stringify(pagePath)},` : ``) +\n    `\"result\":${result},` +\n    `\"staticQueryHashes\":${JSON.stringify(staticQueryHashes)}`\n\n  if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n    const formattedSlices = traverseSlicesUsedByTemplates(\n      pagePath,\n      componentPath,\n      overrideSlices,\n      slicesUsedByTemplates,\n      slices\n    )\n\n    if (formattedSlices) {\n      body += `,\"slicesMap\":${JSON.stringify(formattedSlices)}`\n    }\n  }\n\n  if (matchPath) {\n    body += `,\"matchPath\":\"${matchPath}\"`\n  }\n\n  if (manifestId) {\n    body += `,\"manifestId\":\"${manifestId}\"`\n  }\n\n  body += `}`\n\n  return body\n}\n\nexport function reverseFixedPagePath(pageDataRequestPath: string): string {\n  return pageDataRequestPath === `index` ? `/` : pageDataRequestPath\n}\n\nexport function getPagePathFromPageDataPath(\n  pageDataPath: string\n): string | null {\n  const matches = pageDataPath.matchAll(\n    /^\\/?page-data\\/(.+)\\/page-data.json$/gm\n  )\n  for (const [, requestedPagePath] of matches) {\n    return reverseFixedPagePath(requestedPagePath)\n  }\n\n  return null\n}\n"],"mappings":"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"}