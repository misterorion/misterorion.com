{"version":3,"file":"static-query-mapper.js","names":["removeExportQueryParam","path","includes","filePath","queryParams","split","params","URLSearchParams","delete","paramsString","toString","decodeURIComponent","doesModuleMatchResourcePath","resourcePath","webpackModule","resource","getRealPath","cache","componentPath","has","set","resolve","get","StaticQueryMapper","constructor","store","name","apply","compiler","components","staticQueryComponents","componentsUsingSlices","program","getState","hooks","done","tap","stats","hasErrors","watchMode","enqueueFlush","finishMake","tapPromise","before","compilation","parentCompilation","entryModules","Set","gatsbyBrowserPlugins","slash","join","directory","asyncRequiresPath","entry","entries","values","dependency","dependencies","mod","moduleGraph","getModule","add","realPathCache","Map","webpackModulesByStaticQueryId","webpackModulesByUsedSlicePlaceholderAlias","componentModules","asyncRequiresModule","modules","NormalModule","staticQuery","staticQueryComponentPath","hash","slices","componentComponentPath","component","traverseModule","module","config","visitedModules","onComponent","onRoot","incomingConnections","getIncomingConnections","connection","originModule","globalStaticQueries","staticQueriesByComponents","staticQueryId","staticQueriesForComponent","globalSliceUsage","slicesByComponents","mergePreviouslyCollectedSlices","allStaticQueries","staticQueryHashes","Array","from","sort","allSlices","isSlice","Object","keys","reduce","obj","key","didSlicesChange","slicesByTemplate","didStaticQueriesChange","staticQueriesByTemplate","dispatch","type","payload","sliceNames","pages"],"sources":["../../../../src/utils/webpack/plugins/static-query-mapper.ts"],"sourcesContent":["import path from \"path\"\nimport { Store } from \"redux\"\nimport { Compiler, NormalModule } from \"webpack\"\nimport { isEqual, cloneDeep } from \"lodash\"\nimport { enqueueFlush } from \"../../page-data\"\nimport type { IGatsbyState, IGatsbyPageComponent } from \"../../../redux/types\"\nimport {\n  ICollectedSlices,\n  mergePreviouslyCollectedSlices,\n} from \"../../babel/find-slices\"\nimport { slash } from \"gatsby-core-utils/path\"\n\n/**\n * Remove the export query param from a path that can\n * a) contain only the ?export= query param\n * b) but also contain ?__contentFilePath&export=\n */\nexport const removeExportQueryParam = (\n  path: string | undefined\n): string | undefined => {\n  if (!path?.includes(`?`)) {\n    return path\n  }\n  const [filePath, queryParams] = path?.split(`?`)\n  const params = new URLSearchParams(queryParams)\n  params.delete(`export`)\n\n  const paramsString = params.toString()\n\n  return `${filePath}${\n    paramsString ? `?${decodeURIComponent(paramsString)}` : ``\n  }`\n}\n\n/**\n * Checks if a module matches a resourcePath\n */\nfunction doesModuleMatchResourcePath(\n  resourcePath: string,\n  webpackModule: NormalModule\n): boolean {\n  return (\n    removeExportQueryParam((webpackModule as NormalModule).resource) ===\n    resourcePath\n  )\n}\n\n/**\n * A helper to set/get path resolving\n */\nfunction getRealPath(\n  cache: Map<string, string>,\n  componentPath: string\n): string {\n  if (!cache.has(componentPath)) {\n    cache.set(componentPath, path.resolve(componentPath))\n  }\n\n  return cache.get(componentPath) as string\n}\n\nexport class StaticQueryMapper {\n  private store: Store<IGatsbyState>\n  private name: string\n\n  constructor(store) {\n    this.store = store\n    this.name = `StaticQueryMapper`\n  }\n\n  apply(compiler: Compiler): void {\n    const {\n      components,\n      staticQueryComponents,\n      componentsUsingSlices,\n      program,\n    } = this.store.getState()\n\n    compiler.hooks.done.tap(this.name, stats => {\n      // In dev mode we want to write page-data when compilation succeeds\n      if (!stats.hasErrors() && compiler.watchMode) {\n        enqueueFlush()\n      }\n    })\n\n    compiler.hooks.finishMake.tapPromise(\n      {\n        name: this.name,\n        before: `PartialHydrationPlugin`,\n      },\n      async compilation => {\n        if (compilation.compiler.parentCompilation) {\n          return\n        }\n\n        const entryModules = new Set()\n        const gatsbyBrowserPlugins = slash(\n          path.join(\n            program.directory,\n            `.cache`,\n            `api-runner-browser-plugins.js`\n          )\n        )\n        const asyncRequiresPath = slash(\n          path.join(\n            program.directory,\n            `.cache`,\n            `_this_is_virtual_fs_path_`,\n            `$virtual`,\n            `async-requires.js`\n          )\n        )\n        for (const entry of compilation.entries.values()) {\n          for (const dependency of entry.dependencies) {\n            const mod = compilation.moduleGraph.getModule(dependency)\n            entryModules.add(mod)\n          }\n        }\n\n        const realPathCache = new Map<string, string>()\n\n        const webpackModulesByStaticQueryId = new Map<\n          string,\n          Set<NormalModule>\n        >()\n        const webpackModulesByUsedSlicePlaceholderAlias = new Map<\n          NormalModule,\n          ICollectedSlices\n        >()\n        const componentModules = new Map<NormalModule, IGatsbyPageComponent>()\n        let asyncRequiresModule: NormalModule | undefined\n\n        for (const webpackModule of compilation.modules) {\n          if (!(webpackModule instanceof NormalModule)) {\n            // the only other type can be CssModule at this stage, which we don't care about\n            // this also acts as a type guard, providing fuller typeing for webpackModule\n            continue\n          }\n\n          if (doesModuleMatchResourcePath(asyncRequiresPath, webpackModule)) {\n            asyncRequiresModule = webpackModule\n            continue\n          }\n\n          if (\n            doesModuleMatchResourcePath(gatsbyBrowserPlugins, webpackModule)\n          ) {\n            entryModules.add(webpackModule)\n            continue\n          }\n\n          for (const staticQuery of staticQueryComponents.values()) {\n            const staticQueryComponentPath = getRealPath(\n              realPathCache,\n              staticQuery.componentPath\n            )\n\n            if (\n              !doesModuleMatchResourcePath(\n                staticQueryComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            let set = webpackModulesByStaticQueryId.get(staticQuery.hash)\n\n            if (!set) {\n              set = new Set()\n              webpackModulesByStaticQueryId.set(staticQuery.hash, set)\n            }\n\n            set.add(webpackModule)\n          }\n\n          for (const [filePath, slices] of componentsUsingSlices) {\n            const componentComponentPath = getRealPath(realPathCache, filePath)\n\n            if (\n              !doesModuleMatchResourcePath(\n                componentComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            webpackModulesByUsedSlicePlaceholderAlias.set(webpackModule, slices)\n          }\n\n          for (const component of components.values()) {\n            const componentComponentPath = getRealPath(\n              realPathCache,\n              component.componentPath\n            )\n\n            if (\n              !doesModuleMatchResourcePath(\n                componentComponentPath,\n                webpackModule\n              )\n            ) {\n              continue\n            }\n\n            componentModules.set(webpackModule, component)\n          }\n        }\n\n        function traverseModule(\n          module: NormalModule,\n          config: {\n            onComponent(component: IGatsbyPageComponent): void\n            onRoot(): void\n          },\n          visitedModules = new Set<NormalModule>()\n        ): void {\n          if (visitedModules.has(module)) {\n            return\n          }\n          visitedModules.add(module)\n\n          if (module === asyncRequiresModule) {\n            return\n          }\n\n          const component = componentModules.get(module)\n          if (component) {\n            config.onComponent(component)\n            // don't return here yet, as component might be imported by another one, and we want to traverse up until we reach async-requires\n          }\n\n          if (entryModules.has(module)) {\n            config.onRoot()\n            return\n          }\n\n          const incomingConnections =\n            compilation.moduleGraph.getIncomingConnections(module)\n          for (const connection of incomingConnections) {\n            if (connection.originModule instanceof NormalModule) {\n              traverseModule(connection.originModule, config, visitedModules)\n            }\n          }\n        }\n\n        const globalStaticQueries = new Set<string>()\n        const staticQueriesByComponents = new Map<string, Set<string>>()\n        for (const [\n          staticQueryId,\n          modules,\n        ] of webpackModulesByStaticQueryId.entries()) {\n          for (const module of modules) {\n            traverseModule(module, {\n              onComponent(component: IGatsbyPageComponent) {\n                let staticQueriesForComponent = staticQueriesByComponents.get(\n                  component.componentPath\n                )\n                if (!staticQueriesForComponent) {\n                  staticQueriesForComponent = new Set()\n                  staticQueriesByComponents.set(\n                    component.componentPath,\n                    staticQueriesForComponent\n                  )\n                }\n\n                staticQueriesForComponent.add(staticQueryId)\n              },\n              onRoot() {\n                globalStaticQueries.add(staticQueryId)\n              },\n            })\n          }\n        }\n\n        let globalSliceUsage: ICollectedSlices = {}\n        const slicesByComponents = new Map<string, ICollectedSlices>()\n        for (const [\n          module,\n          slices,\n        ] of webpackModulesByUsedSlicePlaceholderAlias.entries()) {\n          traverseModule(module, {\n            onComponent(component: IGatsbyPageComponent) {\n              slicesByComponents.set(\n                component.componentPath,\n                mergePreviouslyCollectedSlices(\n                  slices,\n                  slicesByComponents.get(component.componentPath)\n                )\n              )\n            },\n            onRoot() {\n              globalSliceUsage = mergePreviouslyCollectedSlices(\n                slices,\n                globalSliceUsage\n              )\n            },\n          })\n        }\n\n        for (const component of components.values()) {\n          const allStaticQueries = new Set([\n            ...globalStaticQueries,\n            ...(staticQueriesByComponents.get(component.componentPath) ?? []),\n          ])\n          const staticQueryHashes = Array.from(allStaticQueries).sort()\n\n          const allSlices = mergePreviouslyCollectedSlices(\n            slicesByComponents.get(component.componentPath) ?? {},\n            component.isSlice ? {} : cloneDeep(globalSliceUsage)\n          )\n\n          const slices = Object.keys(allSlices)\n            .sort()\n            .reduce((obj, key) => {\n              obj[key] = allSlices[key]\n              return obj\n            }, {})\n\n          const didSlicesChange = !isEqual(\n            this.store.getState().slicesByTemplate.get(component.componentPath),\n            slices\n          )\n          const didStaticQueriesChange = !isEqual(\n            this.store\n              .getState()\n              .staticQueriesByTemplate.get(component.componentPath),\n            staticQueryHashes\n          )\n\n          if (didStaticQueriesChange || didSlicesChange) {\n            if (component.isSlice) {\n              this.store.dispatch({\n                type: `ADD_PENDING_SLICE_TEMPLATE_DATA_WRITE`,\n                payload: {\n                  componentPath: component.componentPath,\n                  sliceNames: component.pages,\n                },\n              })\n            } else {\n              this.store.dispatch({\n                type: `ADD_PENDING_TEMPLATE_DATA_WRITE`,\n                payload: {\n                  componentPath: component.componentPath,\n                  pages: component.pages,\n                },\n              })\n            }\n          }\n\n          if (didSlicesChange) {\n            this.store.dispatch({\n              type: `SET_SLICES_BY_TEMPLATE`,\n              payload: {\n                componentPath: component.componentPath,\n                slices,\n              },\n            })\n          }\n\n          if (didStaticQueriesChange) {\n            this.store.dispatch({\n              type: `SET_STATIC_QUERIES_BY_TEMPLATE`,\n              payload: {\n                componentPath: component.componentPath,\n                staticQueryHashes,\n              },\n            })\n          }\n        }\n      }\n    )\n  }\n}\n"],"mappings":"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"}