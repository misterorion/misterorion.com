{"version":3,"file":"filter.js","names":["SEARCHABLE_ENUM","SEARCHABLE","NOT_SEARCHABLE","DEPRECATED_SEARCHABLE","getQueryOperatorListInput","schemaComposer","inputTypeComposer","typeName","getTypeName","replace","getOrCreateITC","itc","addFields","elemMatch","EQ","NE","GT","GTE","LT","LTE","IN","NIN","REGEX","GLOB","ALLOWED_OPERATORS","Boolean","Date","Float","ID","Int","JSON","String","Enum","CustomScalar","ARRAY_OPERATORS","getOperatorFields","fieldType","operators","result","forEach","op","includes","isBuiltInScalarType","type","isSpecifiedScalarType","GraphQLDate","GraphQLJSON","getQueryOperatorInput","GraphQLEnumType","name","getFilterInput","typeComposer","convertToNestedInputType","postfix","onEnter","fieldName","searchable","UnionTypeComposer","ScalarTypeComposer","undefined","getFieldExtension","deprecationReason","leafInputComposer","listInputComposer"],"sources":["../../../src/schema/types/filter.ts"],"sourcesContent":["import {\n  GraphQLEnumType,\n  isSpecifiedScalarType,\n  GraphQLScalarType,\n} from \"graphql\"\nimport {\n  InputTypeComposer,\n  GraphQLJSON,\n  SchemaComposer,\n  ObjectTypeComposer,\n  InterfaceTypeComposer,\n  UnionTypeComposer,\n  ScalarTypeComposer,\n} from \"graphql-compose\"\nimport { GraphQLDate } from \"./date\"\nimport { convertToNestedInputType, IVisitContext } from \"./utils\"\n\ntype Context = any\n\nexport const SEARCHABLE_ENUM = {\n  SEARCHABLE: `SEARCHABLE`,\n  NOT_SEARCHABLE: `NON_SEARCHABLE`,\n  DEPRECATED_SEARCHABLE: `DERPECATED_SEARCHABLE`,\n} as const\n\nconst getQueryOperatorListInput = ({\n  schemaComposer,\n  inputTypeComposer,\n}: {\n  schemaComposer: SchemaComposer<any>\n  inputTypeComposer: InputTypeComposer\n}): InputTypeComposer => {\n  const typeName = inputTypeComposer.getTypeName().replace(/Input/, `ListInput`)\n  return schemaComposer.getOrCreateITC(typeName, itc => {\n    itc.addFields({\n      elemMatch: inputTypeComposer,\n    })\n  })\n}\n\nconst EQ = `eq`\nconst NE = `ne`\nconst GT = `gt`\nconst GTE = `gte`\nconst LT = `lt`\nconst LTE = `lte`\nconst IN = `in`\nconst NIN = `nin`\nconst REGEX = `regex`\nconst GLOB = `glob`\n\nconst ALLOWED_OPERATORS = {\n  Boolean: [EQ, NE, IN, NIN],\n  Date: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  Float: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  ID: [EQ, NE, IN, NIN],\n  Int: [EQ, NE, GT, GTE, LT, LTE, IN, NIN],\n  JSON: [EQ, NE, IN, NIN, REGEX, GLOB],\n  String: [EQ, NE, IN, NIN, REGEX, GLOB],\n  Enum: [EQ, NE, IN, NIN],\n  CustomScalar: [EQ, NE, IN, NIN],\n}\n\ntype TypeName = keyof typeof ALLOWED_OPERATORS\n\nconst ARRAY_OPERATORS = [IN, NIN]\n\nconst getOperatorFields = (\n  fieldType: string,\n  operators: Array<string>\n): Record<string, string | Array<string>> => {\n  const result = {}\n  operators.forEach(op => {\n    if (ARRAY_OPERATORS.includes(op)) {\n      result[op] = [fieldType]\n    } else {\n      result[op] = fieldType\n    }\n  })\n  return result\n}\n\nconst isBuiltInScalarType = (type: any): type is GraphQLScalarType =>\n  isSpecifiedScalarType(type) || type === GraphQLDate || type === GraphQLJSON\n\nconst getQueryOperatorInput = ({\n  schemaComposer,\n  type,\n}: {\n  schemaComposer: SchemaComposer<Context>\n  type: any\n}): InputTypeComposer => {\n  let typeName: TypeName\n  if (type instanceof GraphQLEnumType) {\n    typeName = `Enum`\n  } else if (isBuiltInScalarType(type)) {\n    typeName = type.name as Exclude<TypeName, \"Enum\" | \"CustomScalar\">\n  } else {\n    typeName = `CustomScalar`\n  }\n  const operators = ALLOWED_OPERATORS[typeName]\n  return schemaComposer.getOrCreateITC(type.name + `QueryOperatorInput`, itc =>\n    itc.addFields(getOperatorFields(type, operators))\n  )\n}\n\nexport const getFilterInput = ({\n  schemaComposer,\n  typeComposer,\n}: {\n  schemaComposer: SchemaComposer<Context>\n  typeComposer: ObjectTypeComposer<Context> | InterfaceTypeComposer<Context>\n}): InputTypeComposer =>\n  convertToNestedInputType({\n    schemaComposer,\n    typeComposer,\n    postfix: `FilterInput`,\n    onEnter: ({ fieldName, typeComposer }): IVisitContext => {\n      const searchable =\n        typeComposer instanceof UnionTypeComposer ||\n        typeComposer instanceof ScalarTypeComposer\n          ? undefined\n          : typeComposer.getFieldExtension(fieldName, `searchable`)\n\n      if (searchable === SEARCHABLE_ENUM.NOT_SEARCHABLE) {\n        // stop traversing\n        return null\n      } else if (searchable === SEARCHABLE_ENUM.DEPRECATED_SEARCHABLE) {\n        // mark this and all nested fields as deprecated\n        return {\n          deprecationReason: `Filtering on fields that need arguments to resolve is deprecated.`,\n        }\n      }\n\n      // continue\n      return undefined\n    },\n    leafInputComposer: getQueryOperatorInput,\n    // elemMatch operator\n    listInputComposer: getQueryOperatorListInput,\n  })\n"],"mappings":"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"}