{"version":3,"file":"html.js","names":["FLAG_DIRTY_CLEARED_CACHE","FLAG_DIRTY_NEW_ENTRY","FLAG_DIRTY_DATA_CHANGED","FLAG_DIRTY_STATIC_QUERY_FIRST_RUN","FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED","FLAG_DIRTY_BROWSER_COMPILATION_HASH","FLAG_DIRTY_SSR_COMPILATION_HASH","initialState","trackedHtmlFiles","Map","slicesProps","bySliceId","byPagePath","bySliceName","browserCompilationHash","ssrCompilationHash","trackedStaticQueryResults","unsafeBuiltinWasUsedInSSR","templateCompilationHashes","pagesThatNeedToStitchSlices","Set","htmlReducer","state","action","type","cacheIsCorrupt","clear","forEach","htmlFile","isDeleted","dirty","path","payload","get","pageDataHash","set","existing","name","props","sliceDataHash","Error","queryType","staticQueryResult","queryHash","staticQueryResultHash","resultHash","pagePath","process","env","GATSBY_SLICES","sliceProps","sliceName","templatePath","templateHash","isSlice","pages","sliceTemplate","stdout","write","JSON","stringify","delete","add","slices","staticQueryHash","staticQueryHashes","sliceNameInfo","values","sliceId","slicePropInfo","slicesDataBySliceId","Object","entries","newListOfSlices","hasChildren","sliceInfo","existingBySliceName","oldListOfSlices","has","size","slicePropsListForThisSliceName","sliceState","htmlPageState"],"sources":["../../../src/redux/reducers/html.ts"],"sourcesContent":["import {\n  ActionsUnion,\n  IGatsbyState,\n  IHtmlFileState,\n  IStaticQueryResultState,\n} from \"../types\"\n\nconst FLAG_DIRTY_CLEARED_CACHE = 0b0000001\nconst FLAG_DIRTY_NEW_ENTRY = 0b0000010\nconst FLAG_DIRTY_DATA_CHANGED = 0b0000100\nconst FLAG_DIRTY_STATIC_QUERY_FIRST_RUN = 0b0001000\nconst FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED = 0b0010000\nconst FLAG_DIRTY_BROWSER_COMPILATION_HASH = 0b0100000\nconst FLAG_DIRTY_SSR_COMPILATION_HASH = 0b1000000\n\ntype PagePath = string\n\nfunction initialState(): IGatsbyState[\"html\"] {\n  return {\n    trackedHtmlFiles: new Map<PagePath, IHtmlFileState>(),\n    slicesProps: {\n      bySliceId: new Map(),\n      byPagePath: new Map(),\n      bySliceName: new Map(),\n    },\n    browserCompilationHash: ``,\n    ssrCompilationHash: ``,\n    trackedStaticQueryResults: new Map<string, IStaticQueryResultState>(),\n    unsafeBuiltinWasUsedInSSR: false,\n    templateCompilationHashes: {},\n    pagesThatNeedToStitchSlices: new Set(),\n  }\n}\n\nexport function htmlReducer(\n  state: IGatsbyState[\"html\"] = initialState(),\n  action: ActionsUnion\n): IGatsbyState[\"html\"] {\n  switch (action.type) {\n    case `DELETE_CACHE`: {\n      if (action.cacheIsCorrupt) {\n        // `public` doesn't exist so we can start fresh\n        return initialState()\n      } else {\n        // we can't just clear the cache here - we want to keep track of pages, so we mark them all as \"deleted\"\n        // if they are recreated \"isDeleted\" flag will be removed\n        state.browserCompilationHash = ``\n        state.ssrCompilationHash = ``\n        state.templateCompilationHashes = {}\n        state.trackedStaticQueryResults.clear()\n        state.unsafeBuiltinWasUsedInSSR = false\n        state.trackedHtmlFiles.forEach(htmlFile => {\n          htmlFile.isDeleted = true\n          // there was a change somewhere, so just in case we mark those files are dirty as well\n          htmlFile.dirty |= FLAG_DIRTY_CLEARED_CACHE\n        })\n        // slice html don't need to be deleted, they are just cleared\n        state.slicesProps = {\n          bySliceId: new Map(),\n          byPagePath: new Map(),\n          bySliceName: new Map(),\n        }\n        state.pagesThatNeedToStitchSlices = new Set()\n        return state\n      }\n    }\n\n    case `CREATE_PAGE`: {\n      // CREATE_PAGE can be called even if page already exist, so we only want to do anything\n      // if we don't track given page yet or if page is marked as deleted\n      const { path } = action.payload\n\n      let htmlFile = state.trackedHtmlFiles.get(path)\n      if (!htmlFile) {\n        htmlFile = {\n          dirty: FLAG_DIRTY_NEW_ENTRY,\n          isDeleted: false,\n          pageDataHash: ``,\n        }\n        state.trackedHtmlFiles.set(path, htmlFile)\n      } else if (htmlFile.isDeleted) {\n        // page was recreated so we remove `isDeleted` flag\n        // TBD if dirtiness need to change\n        htmlFile.isDeleted = false\n      }\n\n      return state\n    }\n\n    case `CREATE_SLICE`: {\n      const existing = state.slicesProps.bySliceName.get(action.payload.name)\n      if (!existing) {\n        state.slicesProps.bySliceName.set(action.payload.name, {\n          dirty: FLAG_DIRTY_NEW_ENTRY,\n          props: new Set(),\n          sliceDataHash: ``,\n        })\n      }\n      return state\n    }\n\n    case `DELETE_PAGE`: {\n      const { path } = action.payload\n      const htmlFile = state.trackedHtmlFiles.get(path)\n\n      if (!htmlFile) {\n        // invariant\n        throw new Error(\n          `[html reducer] how can I delete page that wasn't created (?)`\n        )\n      }\n\n      htmlFile.isDeleted = true\n      // TBD if dirtiness need to change\n      return state\n    }\n\n    case `PAGE_QUERY_RUN`: {\n      // Despite action name, this action is actually emitted for both page and static queries.\n      // In here we actually only care about static query result (particularly its hash).\n      // We don't care about page query result because we don't actually use page query result\n      // directly when generating html. We care about page-data (which contains page query result).\n      // Handling of page-data that transitively handles page query result is done in handler for\n      // `ADD_PAGE_DATA_STATS` action.\n      if (action.payload.queryType === `static`) {\n        // static query case\n        let staticQueryResult = state.trackedStaticQueryResults.get(\n          action.payload.queryHash\n        )\n        if (!staticQueryResult) {\n          staticQueryResult = {\n            dirty: FLAG_DIRTY_STATIC_QUERY_FIRST_RUN,\n            staticQueryResultHash: action.payload.resultHash,\n          }\n          state.trackedStaticQueryResults.set(\n            action.payload.queryHash,\n            staticQueryResult\n          )\n        } else if (\n          staticQueryResult.staticQueryResultHash !== action.payload.resultHash\n        ) {\n          staticQueryResult.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n          staticQueryResult.staticQueryResultHash = action.payload.resultHash\n        }\n      }\n\n      return state\n    }\n    case `ADD_PAGE_DATA_STATS`: {\n      const htmlFile = state.trackedHtmlFiles.get(action.payload.pagePath)\n      if (!htmlFile) {\n        // invariant\n        throw new Error(\n          `[html reducer] I received event that query for a page finished running, but I'm not aware of the page it ran for (?)`\n        )\n      }\n\n      if (htmlFile.pageDataHash !== action.payload.pageDataHash) {\n        htmlFile.pageDataHash = action.payload.pageDataHash\n        htmlFile.dirty |= FLAG_DIRTY_DATA_CHANGED\n      }\n      return state\n    }\n\n    case `SET_WEBPACK_COMPILATION_HASH`: {\n      if (!(_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES)) {\n        if (state.browserCompilationHash !== action.payload) {\n          state.browserCompilationHash = action.payload\n          state.trackedHtmlFiles.forEach(htmlFile => {\n            htmlFile.dirty |= FLAG_DIRTY_BROWSER_COMPILATION_HASH\n          })\n        }\n      }\n      return state\n    }\n\n    case `ADD_SLICE_DATA_STATS`: {\n      const sliceProps = state.slicesProps.bySliceName.get(\n        action.payload.sliceName\n      )\n      if (!sliceProps) {\n        throw new Error(`no slice props for ${action.payload.sliceName}`)\n      }\n\n      if (sliceProps.sliceDataHash !== action.payload.sliceDataHash) {\n        sliceProps.sliceDataHash = action.payload.sliceDataHash\n        sliceProps.dirty |= FLAG_DIRTY_DATA_CHANGED\n      }\n      return state\n    }\n\n    case `SET_SSR_TEMPLATE_WEBPACK_COMPILATION_HASH`: {\n      if (\n        state.templateCompilationHashes[action.payload.templatePath] !==\n        action.payload.templateHash\n      ) {\n        state.templateCompilationHashes[action.payload.templatePath] =\n          action.payload.templateHash\n\n        if (action.payload.isSlice) {\n          for (const sliceName of action.payload.pages) {\n            const sliceTemplate = state.slicesProps.bySliceName.get(sliceName)\n            if (sliceTemplate) {\n              sliceTemplate.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n            }\n          }\n        } else {\n          if (action.payload.pages) {\n            action.payload.pages.forEach(pagePath => {\n              const htmlFile = state.trackedHtmlFiles.get(pagePath)\n              if (htmlFile) {\n                htmlFile.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n              }\n            })\n          } else {\n            process.stdout.write(\n              `---no pages for:\\n${JSON.stringify(action.payload, null, 2)}\\n`\n            )\n          }\n        }\n      }\n\n      return state\n    }\n\n    case `SET_SSR_WEBPACK_COMPILATION_HASH`: {\n      if (state.ssrCompilationHash !== action.payload) {\n        state.ssrCompilationHash = action.payload\n        // we will mark every html file as dirty, so we can safely reset\n        // unsafeBuiltinWasUsedInSSR flag, which might be set again if\n        // ssr bundle continue to use those\n        state.unsafeBuiltinWasUsedInSSR = false\n        state.trackedHtmlFiles.forEach(htmlFile => {\n          htmlFile.dirty |= FLAG_DIRTY_SSR_COMPILATION_HASH\n        })\n      }\n      return state\n    }\n\n    case `HTML_REMOVED`: {\n      state.trackedHtmlFiles.delete(action.payload)\n      return state\n    }\n\n    case `HTML_TRACKED_PAGES_CLEANUP`: {\n      // this is to cleanup variants of page paths that don't result in artifacts deletion\n      // but page path should be pruned for cases like page changing path from \"/foo\" to \"/foo/\" (or vice versa)\n      // where produced artifacts filenames are the same and we don't want to delete them after building,\n      // but we still want to cleanup state here.\n      for (const path of action.payload) {\n        state.trackedHtmlFiles.delete(path)\n      }\n      return state\n    }\n\n    case `HTML_GENERATED`: {\n      for (const path of action.payload) {\n        const htmlFile = state.trackedHtmlFiles.get(path)\n        if (htmlFile) {\n          htmlFile.dirty = 0\n          // if we regenerated html, slice placeholders will be empty and we will have to fill\n          // them in, so we are marking that page for stitching\n          state.pagesThatNeedToStitchSlices.add(path)\n        }\n      }\n\n      return state\n    }\n\n    case `HTML_MARK_DIRTY_BECAUSE_STATIC_QUERY_RESULT_CHANGED`: {\n      // mark pages as dirty\n      for (const path of action.payload.pages) {\n        const htmlFile = state.trackedHtmlFiles.get(path)\n        if (htmlFile) {\n          htmlFile.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n        }\n      }\n\n      if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n        // mark slices as dirty\n        for (const sliceName of action.payload.slices) {\n          const sliceProps = state.slicesProps.bySliceName.get(sliceName)\n          if (sliceProps) {\n            sliceProps.dirty |= FLAG_DIRTY_STATIC_QUERY_RESULT_CHANGED\n          }\n        }\n      }\n\n      // mark static queries as not dirty anymore (we flushed their dirtiness into pages)\n      for (const staticQueryHash of action.payload.staticQueryHashes) {\n        const staticQueryResult =\n          state.trackedStaticQueryResults.get(staticQueryHash)\n        if (staticQueryResult) {\n          staticQueryResult.dirty = 0\n        }\n      }\n\n      if (_CFLAGS_.GATSBY_MAJOR === `5` && process.env.GATSBY_SLICES) {\n        // loop through slice names and mark their slice props as dirty\n        for (const sliceNameInfo of state.slicesProps.bySliceName.values()) {\n          if (sliceNameInfo.dirty) {\n            for (const sliceId of sliceNameInfo.props) {\n              const slicePropInfo = state.slicesProps.bySliceId.get(sliceId)\n\n              if (slicePropInfo) {\n                slicePropInfo.dirty |= sliceNameInfo.dirty\n              }\n            }\n            sliceNameInfo.dirty = 0\n          }\n        }\n      }\n\n      return state\n    }\n\n    case `SSR_USED_UNSAFE_BUILTIN`: {\n      state.unsafeBuiltinWasUsedInSSR = true\n      return state\n    }\n\n    case `SET_SLICES_PROPS`: {\n      for (const [pagePath, slicesDataBySliceId] of Object.entries(\n        action.payload\n      )) {\n        const newListOfSlices = new Set<string>()\n        for (const [\n          sliceId,\n          { props, sliceName, hasChildren },\n        ] of Object.entries(slicesDataBySliceId)) {\n          newListOfSlices.add(sliceId)\n\n          let sliceInfo = state.slicesProps.bySliceId.get(sliceId)\n          if (!sliceInfo) {\n            sliceInfo = {\n              pages: new Set([pagePath]),\n              props,\n              sliceName,\n              hasChildren,\n              dirty: FLAG_DIRTY_NEW_ENTRY,\n            }\n            state.slicesProps.bySliceId.set(sliceId, sliceInfo)\n\n            let existingBySliceName =\n              state.slicesProps.bySliceName.get(sliceName)\n            if (!existingBySliceName) {\n              existingBySliceName = {\n                dirty: 0,\n                sliceDataHash: ``,\n                props: new Set<string>(),\n              }\n              state.slicesProps.bySliceName.set(sliceName, existingBySliceName)\n            }\n\n            existingBySliceName.props.add(sliceId)\n          } else {\n            sliceInfo.pages.add(pagePath)\n\n            if (hasChildren) {\n              sliceInfo.hasChildren = true\n            }\n          }\n        }\n\n        const oldListOfSlices = state.slicesProps.byPagePath.get(pagePath)\n        if (oldListOfSlices) {\n          for (const sliceId of oldListOfSlices) {\n            if (!newListOfSlices.has(sliceId)) {\n              oldListOfSlices.delete(sliceId)\n              const sliceInfo = state.slicesProps.bySliceId.get(sliceId)\n\n              if (sliceInfo) {\n                sliceInfo.pages.delete(pagePath)\n              }\n            }\n          }\n        }\n\n        state.slicesProps.byPagePath.set(pagePath, newListOfSlices)\n      }\n\n      return state\n    }\n\n    case `SLICES_PROPS_REMOVE_STALE`: {\n      for (const [\n        sliceId,\n        { pages, sliceName },\n      ] of state.slicesProps.bySliceId.entries()) {\n        if (pages.size <= 0) {\n          state.slicesProps.bySliceId.delete(sliceId)\n          const slicePropsListForThisSliceName =\n            state.slicesProps.bySliceName.get(sliceName)\n          if (slicePropsListForThisSliceName) {\n            slicePropsListForThisSliceName.props.delete(sliceId)\n          }\n        }\n      }\n      return state\n    }\n\n    case `SLICES_PROPS_RENDERED`: {\n      for (const { sliceId } of action.payload) {\n        const sliceState = state.slicesProps.bySliceId.get(sliceId)\n        if (sliceState) {\n          sliceState.dirty = 0\n          for (const pagePath of sliceState.pages) {\n            state.pagesThatNeedToStitchSlices.add(pagePath)\n          }\n        }\n      }\n      return state\n    }\n\n    case `SLICES_SCRIPTS_REGENERATED`: {\n      for (const [pagePath, htmlPageState] of state.trackedHtmlFiles) {\n        if (!htmlPageState.isDeleted) {\n          state.pagesThatNeedToStitchSlices.add(pagePath)\n        }\n      }\n      return state\n    }\n\n    case `SLICES_STITCHED`: {\n      state.pagesThatNeedToStitchSlices.clear()\n      return state\n    }\n  }\n  return state\n}\n"],"mappings":"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"}