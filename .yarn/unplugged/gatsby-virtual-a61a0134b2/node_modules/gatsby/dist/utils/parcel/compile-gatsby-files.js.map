{"version":3,"file":"compile-gatsby-files.js","names":["COMPILED_CACHE_DIR","PARCEL_CACHE_DIR","gatsbyFileRegex","RETRY_COUNT","getCacheDir","siteRoot","exponentialBackoff","retry","Promise","resolve","timeout","Math","pow","setTimeout","constructParcel","cache","Parcel","entries","defaultConfig","require","mode","targets","root","outputFormat","includeNodeModules","sourceMap","process","env","NODE_ENV","engines","node","distDir","cacheDir","compileGatsbyFiles","files","readdir","nearMatch","configName","file","name","path","parse","isNearMatch","isTSX","endsWith","reporter","panic","id","context","ensureDir","emptyDir","LMDBCache","parcel","bundleGraph","run","cacheClosePromise","store","close","e","verbose","toString","bundles","getBundles","length","compiledTSFilesCount","bundle","filePath","retries","compiledFileLocation","sourceFileLocation","getMainEntry","message","remove","mainEntry","telemetry","isTrackingEnabled","trackCli","valueInteger","error","diagnostics","handleErrors","sourceMessage","forEach","err","codeFrames","c","codeHighlightsMessage","codeHighlights","specificMessage","undefined","generalMessage","origin","hints","getResolvedFieldsForPlugin","rootDir","pluginName","resolvedCompiledGatsbyNode","findCompiledLocalPluginModule","moduleName","compiledPathForPlugin","compiledPathForModule","isCompiled","existsSync"],"sources":["../../../src/utils/parcel/compile-gatsby-files.ts"],"sourcesContent":["import { Parcel } from \"@parcel/core\"\nimport { LMDBCache, Cache } from \"@parcel/cache\"\nimport path from \"path\"\nimport type { Diagnostic } from \"@parcel/diagnostic\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport { ensureDir, emptyDir, existsSync, remove, readdir } from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport { isNearMatch } from \"../is-near-match\"\n\nexport const COMPILED_CACHE_DIR = `.cache/compiled`\nexport const PARCEL_CACHE_DIR = `.cache/.parcel-cache`\nexport const gatsbyFileRegex = `gatsby-+(node|config).ts`\nconst RETRY_COUNT = 5\n\nfunction getCacheDir(siteRoot: string): string {\n  return `${siteRoot}/${PARCEL_CACHE_DIR}`\n}\n\nfunction exponentialBackoff(retry: number): Promise<void> {\n  if (retry === 0) {\n    return Promise.resolve()\n  }\n  const timeout = 50 * Math.pow(2, retry)\n  return new Promise(resolve => setTimeout(resolve, timeout))\n}\n\n/**\n * Construct Parcel with config.\n * @see {@link https://parceljs.org/features/targets/}\n */\nexport function constructParcel(siteRoot: string, cache?: Cache): Parcel {\n  return new Parcel({\n    entries: [\n      `${siteRoot}/${gatsbyFileRegex}`,\n      `${siteRoot}/plugins/**/${gatsbyFileRegex}`,\n    ],\n    defaultConfig: require.resolve(`gatsby-parcel-config`),\n    mode: `production`,\n    cache,\n    targets: {\n      root: {\n        outputFormat: `commonjs`,\n        includeNodeModules: false,\n        sourceMap: process.env.NODE_ENV === `development`,\n        engines: {\n          node: _CFLAGS_.GATSBY_MAJOR === `5` ? `>= 18.0.0` : `>= 14.15.0`,\n        },\n        distDir: `${siteRoot}/${COMPILED_CACHE_DIR}`,\n      },\n    },\n    cacheDir: getCacheDir(siteRoot),\n  })\n}\n\n/**\n * Compile known gatsby-* files (e.g. `gatsby-config`, `gatsby-node`)\n * and output in `<SITE_ROOT>/.cache/compiled`.\n */\nexport async function compileGatsbyFiles(\n  siteRoot: string,\n  retry: number = 0\n): Promise<void> {\n  try {\n    // Check for gatsby-node.jsx and gatsby-node.tsx (or other misnamed variations)\n    const files = await readdir(siteRoot)\n\n    let nearMatch = ``\n    const configName = `gatsby-node`\n\n    for (const file of files) {\n      if (nearMatch) {\n        break\n      }\n\n      const { name } = path.parse(file)\n      // Of course, allow valid gatsby-node files\n      if (file === `gatsby-node.js` || file === `gatsby-node.ts`) {\n        break\n      }\n\n      if (isNearMatch(name, configName, 3)) {\n        nearMatch = file\n      }\n    }\n\n    // gatsby-node is misnamed\n    if (nearMatch) {\n      const isTSX = nearMatch.endsWith(`.tsx`)\n      reporter.panic({\n        id: `10128`,\n        context: {\n          configName,\n          nearMatch,\n          isTSX,\n        },\n      })\n    }\n\n    const distDir = `${siteRoot}/${COMPILED_CACHE_DIR}`\n    await ensureDir(distDir)\n    await emptyDir(distDir)\n\n    await exponentialBackoff(retry)\n\n    // for whatever reason TS thinks LMDBCache is some browser Cache and not actually Parcel's Cache\n    // so we force type it to Parcel's Cache\n    const cache = new LMDBCache(getCacheDir(siteRoot)) as unknown as Cache\n    const parcel = constructParcel(siteRoot, cache)\n    const { bundleGraph } = await parcel.run()\n    let cacheClosePromise = Promise.resolve()\n    try {\n      // @ts-ignore store is public field on LMDBCache class, but public interface for Cache\n      // doesn't have it. There doesn't seem to be proper public API for this, so we have to\n      // resort to reaching into internals. Just in case this is wrapped in try/catch if\n      // parcel changes internals in future (closing cache is only needed when retrying\n      // so the if the change happens we shouldn't fail on happy builds)\n      cacheClosePromise = cache.store.close()\n    } catch (e) {\n      reporter.verbose(`Failed to close parcel cache\\n${e.toString()}`)\n    }\n\n    await exponentialBackoff(retry)\n\n    const bundles = bundleGraph.getBundles()\n\n    if (bundles.length === 0) return\n\n    let compiledTSFilesCount = 0\n    for (const bundle of bundles) {\n      // validate that output exists and is valid\n      try {\n        delete require.cache[bundle.filePath]\n        require(bundle.filePath)\n      } catch (e) {\n        if (retry >= RETRY_COUNT) {\n          reporter.panic({\n            id: `11904`,\n            context: {\n              siteRoot,\n              retries: RETRY_COUNT,\n              compiledFileLocation: bundle.filePath,\n              sourceFileLocation: bundle.getMainEntry()?.filePath,\n            },\n          })\n        } else if (retry > 0) {\n          // first retry is most flaky and it seems it always get in good state\n          // after that - most likely cache clearing is the trick that fixes the problem\n          reporter.verbose(\n            `Failed to import compiled file \"${\n              bundle.filePath\n            }\" after retry, attempting another retry (#${\n              retry + 1\n            } of ${RETRY_COUNT}) - \"${e.message}\"`\n          )\n        }\n\n        // sometimes parcel cache gets in weird state and we need to clear the cache\n        await cacheClosePromise\n\n        try {\n          await remove(getCacheDir(siteRoot))\n        } catch {\n          // in windows we might get \"EBUSY\" errors if LMDB failed to close, so this try/catch is\n          // to prevent EBUSY errors from potentially hiding real import errors\n        }\n\n        await compileGatsbyFiles(siteRoot, retry + 1)\n        return\n      }\n\n      const mainEntry = bundle.getMainEntry()?.filePath\n      // mainEntry won't exist for shared chunks\n      if (mainEntry) {\n        if (mainEntry.endsWith(`.ts`)) {\n          compiledTSFilesCount = compiledTSFilesCount + 1\n        }\n      }\n    }\n\n    if (telemetry.isTrackingEnabled()) {\n      telemetry.trackCli(`PARCEL_COMPILATION_END`, {\n        valueInteger: compiledTSFilesCount,\n        name: `count of compiled ts files`,\n      })\n    }\n  } catch (error) {\n    if (error.diagnostics) {\n      handleErrors(error.diagnostics)\n    } else {\n      reporter.panic({\n        id: `11903`,\n        error,\n        context: {\n          siteRoot,\n          sourceMessage: error.message,\n        },\n      })\n    }\n  }\n}\n\nfunction handleErrors(diagnostics: Array<Diagnostic>): void {\n  diagnostics.forEach(err => {\n    if (err.codeFrames) {\n      err.codeFrames.forEach(c => {\n        // Assuming that codeHighlights only ever has one entry in the array. Local tests only ever showed one\n        const codeHighlightsMessage = c?.codeHighlights[0]?.message\n        // If both messages are the same don't print the specific, otherwise they would be duplicate\n        const specificMessage =\n          codeHighlightsMessage === err.message\n            ? undefined\n            : codeHighlightsMessage\n        reporter.panic({\n          id: `11901`,\n          context: {\n            filePath: c?.filePath,\n            generalMessage: err.message,\n            specificMessage,\n            origin: err?.origin,\n            hints: err?.hints,\n          },\n        })\n      })\n    } else {\n      reporter.panic({\n        id: `11901`,\n        context: {\n          generalMessage: err.message,\n          origin: err?.origin,\n          hints: err?.hints,\n        },\n      })\n    }\n  })\n}\n\nexport function getResolvedFieldsForPlugin(\n  rootDir: string,\n  pluginName: string\n): {\n  resolvedCompiledGatsbyNode?: string\n} {\n  return {\n    resolvedCompiledGatsbyNode: findCompiledLocalPluginModule(\n      rootDir,\n      pluginName,\n      `gatsby-node`\n    ),\n  }\n}\n\nexport function findCompiledLocalPluginModule(\n  rootDir: string,\n  pluginName: string,\n  moduleName: \"gatsby-config\" | \"gatsby-node\"\n): string | undefined {\n  const compiledPathForPlugin =\n    pluginName === `default-site-plugin`\n      ? `${rootDir}/${COMPILED_CACHE_DIR}`\n      : `${rootDir}/${COMPILED_CACHE_DIR}/plugins/${pluginName}`\n\n  const compiledPathForModule = `${compiledPathForPlugin}/${moduleName}.js`\n\n  const isCompiled = existsSync(compiledPathForModule)\n  if (isCompiled) {\n    return compiledPathForModule\n  }\n\n  return undefined\n}\n"],"mappings":"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"}