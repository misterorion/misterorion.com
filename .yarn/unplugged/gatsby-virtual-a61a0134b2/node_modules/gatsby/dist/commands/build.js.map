{"version":3,"file":"build.js","names":["module","exports","build","program","externalTelemetryAttributes","global","__GATSBY","buildId","uuid","v4","root","directory","isTruthy","process","env","VERBOSE","verbose","report","setVerbose","profile","warn","NODE_ENV","updateInternalSiteMetadata","name","sitePackageJson","sitePath","lastRun","Date","now","pid","markWebpackStatusAsPending","publicDir","path","join","initTracer","GATSBY_OPEN_TRACING_CONFIG_FILE","openTracingConfigFile","buildActivity","phantomActivity","start","telemetry","trackCli","signalExit","exitCode","buildSpan","span","setTag","Object","entries","forEach","key","value","gatsbyNodeGraphQLFunction","workerPool","bootstrap","parentSpan","apiRunnerNode","graphql","writeOutRequires","store","closeJavascriptBundleCompilation","closeHTMLBundleCompilation","closePartialHydrationBundleCompilation","webpackAssets","webpackCompilationHash","webpackSSRCompilationHash","engineBundlingPromises","buildActivityTimer","activityTimer","stats","close","buildProductionBundle","hasWarnings","rawMessages","toJson","all","warnings","reportWebpackWarnings","assets","cachedAssets","hash","err","panic","structureWebpackErrors","Stage","BuildJavascript","end","shouldGenerateEngines","state","getState","push","createGraphqlEngineBundle","createPageSSRBundle","rootDir","components","staticQueriesByTemplate","reporter","isVerbose","Promise","buildSSRBundleActivityProgress","buildRenderer","BuildHTML","GATSBY_PARTIAL_HYDRATION","buildPartialHydrationBundleActivityProgress","buildPartialHydrationRenderer","pageConfigActivity","preparePageTemplateConfigs","validateEnginesActivity","validateEngines","error","id","context","cacheActivity","graphqlRunner","GraphQLRunner","collectStats","graphqlTracing","queryIds","calculateDirtyQueries","pageQueryIds","filter","query","getPageMode","waitMaterializePageMode","materializePageMode","waitForWorkerPoolRestart","resolve","GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING","runQueriesInWorkersQueue","waitUntilAllJobsComplete","waitUntilWorkerJobsAreComplete","restart","mergeWorkerState","runStaticQueries","runPageQueries","writeQueryContext","send","type","action","timestamp","toJSON","copyStaticDirs","appDataUtil","exists","dispatch","payload","rewriteActivityTimer","write","html","ssrCompilationHash","flushPendingPageDataWrites","markWebpackStatusAsDone","isTrackingEnabled","bundleSizes","asset","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","queryStats","getStats","actions","setProgramStatus","db","saveState","keepPageRenderer","toRegenerate","toDelete","buildHTMLPagesAndDeleteStaleArtifacts","waitWorkerPoolEnd","schema","definitions","config","graphqlTypegenOptions","graphqlTypegen","generateOnBuild","typegenActivity","writeTypeScriptTypes","panicOnBuild","sourceMessage","SSGCount","DSGCount","SSRCount","page","pages","mode","pagesCount","length","totalPagesCount","postBuildActivityTimer","e","message","_renderPageTree","functions","gatsbyCloudConfig","constructConfigObject","info","uptime","stopTracer","logPages","writeToFile","createdFilesPath","createdFilesContent","deletedFilesPath","deletedFilesContent","fs","writeFile","showExperimentNotices","userGetsSevenDayFeedback","showSevenDayFeedbackRequest","userPassesFeedbackRequestHeuristic","showFeedbackRequest"],"sources":["../../src/commands/build.ts"],"sourcesContent":["import path from \"path\"\nimport report from \"gatsby-cli/lib/reporter\"\nimport signalExit from \"signal-exit\"\nimport fs from \"fs-extra\"\nimport telemetry from \"gatsby-telemetry\"\nimport { updateInternalSiteMetadata, isTruthy, uuid } from \"gatsby-core-utils\"\nimport {\n  buildRenderer,\n  buildHTMLPagesAndDeleteStaleArtifacts,\n  IBuildArgs,\n} from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nimport { bootstrap } from \"../bootstrap\"\nimport apiRunnerNode from \"../utils/api-runner-node\"\nimport { GraphQLRunner } from \"../query/graphql-runner\"\nimport { copyStaticDirs } from \"../utils/get-static-dir\"\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nimport * as db from \"../redux/save-state\"\nimport { store } from \"../redux\"\nimport * as appDataUtil from \"../utils/app-data\"\nimport { flush as flushPendingPageDataWrites } from \"../utils/page-data\"\nimport {\n  structureWebpackErrors,\n  reportWebpackWarnings,\n} from \"../utils/webpack-error-utils\"\nimport {\n  userGetsSevenDayFeedback,\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n  showSevenDayFeedbackRequest,\n} from \"../utils/feedback\"\nimport { actions } from \"../redux/actions\"\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\nimport { Stage } from \"./types\"\nimport {\n  calculateDirtyQueries,\n  runStaticQueries,\n  runPageQueries,\n  writeOutRequires,\n} from \"../services\"\nimport {\n  markWebpackStatusAsPending,\n  markWebpackStatusAsDone,\n} from \"../utils/webpack-status\"\nimport { showExperimentNotices } from \"../utils/show-experiment-notice\"\nimport {\n  mergeWorkerState,\n  runQueriesInWorkersQueue,\n} from \"../utils/worker/pool\"\nimport { createGraphqlEngineBundle } from \"../schema/graphql-engine/bundle-webpack\"\nimport {\n  createPageSSRBundle,\n  writeQueryContext,\n} from \"../utils/page-ssr-module/bundle-webpack\"\nimport { shouldGenerateEngines } from \"../utils/engines-helpers\"\nimport reporter from \"gatsby-cli/lib/reporter\"\nimport type webpack from \"webpack\"\nimport {\n  materializePageMode,\n  getPageMode,\n  preparePageTemplateConfigs,\n} from \"../utils/page-mode\"\nimport { validateEngines } from \"../utils/validate-engines\"\nimport { constructConfigObject } from \"../utils/gatsby-cloud-config\"\nimport { waitUntilWorkerJobsAreComplete } from \"../utils/jobs/worker-messaging\"\nimport { writeTypeScriptTypes } from \"../utils/graphql-typegen/ts-codegen\"\n\nmodule.exports = async function build(\n  program: IBuildArgs,\n  // Let external systems running Gatsby to inject attributes\n  externalTelemetryAttributes: Record<string, any>\n): Promise<void> {\n  // global gatsby object to use without store\n  global.__GATSBY = {\n    buildId: uuid.v4(),\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    root: program!.directory,\n  }\n\n  if (isTruthy(process.env.VERBOSE)) {\n    program.verbose = true\n  }\n  report.setVerbose(program.verbose)\n\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.com/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  report.verbose(`Running build in \"${process.env.NODE_ENV}\" environment`)\n\n  await updateInternalSiteMetadata({\n    name: program.sitePackageJson.name,\n    sitePath: program.directory,\n    lastRun: Date.now(),\n    pid: process.pid,\n  })\n\n  markWebpackStatusAsPending()\n\n  const publicDir = path.join(program.directory, `public`)\n  if (!externalTelemetryAttributes) {\n    await initTracer(\n      process.env.GATSBY_OPEN_TRACING_CONFIG_FILE ||\n        program.openTracingConfigFile\n    )\n  }\n\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, {\n      exitCode: exitCode as number | undefined,\n    })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  // Add external tags to buildSpan\n  if (externalTelemetryAttributes) {\n    Object.entries(externalTelemetryAttributes).forEach(([key, value]) => {\n      buildActivity.span.setTag(key, value)\n    })\n  }\n\n  const { gatsbyNodeGraphQLFunction, workerPool } = await bootstrap({\n    program,\n    parentSpan: buildSpan,\n  })\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: buildSpan,\n  })\n\n  // writes sync and async require files to disk\n  // used inside routing \"html\" + \"javascript\"\n  await writeOutRequires({\n    store,\n    parentSpan: buildSpan,\n  })\n\n  let closeJavascriptBundleCompilation: (() => Promise<void>) | undefined\n  let closeHTMLBundleCompilation: (() => Promise<void>) | undefined\n  let closePartialHydrationBundleCompilation: (() => Promise<void>) | undefined\n  let webpackAssets: Array<webpack.StatsAsset> | null = null\n  let webpackCompilationHash: string | null = null\n  let webpackSSRCompilationHash: string | null = null\n\n  const engineBundlingPromises: Array<Promise<any>> = []\n  const buildActivityTimer = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  buildActivityTimer.start()\n\n  try {\n    const { stats, close } = await buildProductionBundle(\n      program,\n      buildActivityTimer.span\n    )\n    closeJavascriptBundleCompilation = close\n\n    if (stats.hasWarnings()) {\n      const rawMessages = stats.toJson({ all: false, warnings: true })\n      reportWebpackWarnings(rawMessages.warnings, report)\n    }\n\n    webpackAssets = stats.toJson({\n      all: false,\n      assets: true,\n      cachedAssets: true,\n    }).assets as Array<webpack.StatsAsset>\n    webpackCompilationHash = stats.hash as string\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildJavascript, err))\n  } finally {\n    buildActivityTimer.end()\n  }\n\n  if (shouldGenerateEngines()) {\n    const state = store.getState()\n    const buildActivityTimer = report.activityTimer(\n      `Building Rendering Engines`,\n      { parentSpan: buildSpan }\n    )\n    try {\n      buildActivityTimer.start()\n      // bundle graphql-engine\n      engineBundlingPromises.push(\n        createGraphqlEngineBundle(program.directory, report, program.verbose)\n      )\n\n      engineBundlingPromises.push(\n        createPageSSRBundle({\n          rootDir: program.directory,\n          components: state.components,\n          staticQueriesByTemplate: state.staticQueriesByTemplate,\n          webpackCompilationHash: webpackCompilationHash as string, // we set webpackCompilationHash above\n          reporter: report,\n          isVerbose: program.verbose,\n        })\n      )\n      await Promise.all(engineBundlingPromises)\n    } catch (err) {\n      reporter.panic(err)\n    } finally {\n      buildActivityTimer.end()\n    }\n  }\n\n  const buildSSRBundleActivityProgress = report.activityTimer(\n    `Building HTML renderer`,\n    { parentSpan: buildSpan }\n  )\n  buildSSRBundleActivityProgress.start()\n  try {\n    const { close, stats } = await buildRenderer(\n      program,\n      Stage.BuildHTML,\n      buildSSRBundleActivityProgress.span\n    )\n\n    closeHTMLBundleCompilation = close\n    webpackSSRCompilationHash = stats.hash as string\n\n    await close()\n  } catch (err) {\n    buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n  } finally {\n    buildSSRBundleActivityProgress.end()\n  }\n\n  if (\n    (process.env.GATSBY_PARTIAL_HYDRATION === `true` ||\n      process.env.GATSBY_PARTIAL_HYDRATION === `1`) &&\n    _CFLAGS_.GATSBY_MAJOR === `5`\n  ) {\n    const buildPartialHydrationBundleActivityProgress = report.activityTimer(\n      `Building Partial Hydration renderer`,\n      { parentSpan: buildSpan }\n    )\n    buildPartialHydrationBundleActivityProgress.start()\n    try {\n      const { buildPartialHydrationRenderer } = await import(`./build-html`)\n      const { close } = await buildPartialHydrationRenderer(\n        program,\n        Stage.BuildHTML,\n        buildPartialHydrationBundleActivityProgress.span\n      )\n\n      closePartialHydrationBundleCompilation = close\n\n      await close()\n    } catch (err) {\n      buildActivityTimer.panic(structureWebpackErrors(Stage.BuildHTML, err))\n    } finally {\n      buildPartialHydrationBundleActivityProgress.end()\n    }\n  }\n\n  // exec outer config function for each template\n  const pageConfigActivity = report.activityTimer(`Execute page configs`, {\n    parentSpan: buildSpan,\n  })\n  pageConfigActivity.start()\n  try {\n    await preparePageTemplateConfigs(gatsbyNodeGraphQLFunction)\n  } catch (err) {\n    reporter.panic(err)\n  } finally {\n    pageConfigActivity.end()\n  }\n\n  if (shouldGenerateEngines()) {\n    const validateEnginesActivity = report.activityTimer(\n      `Validating Rendering Engines`,\n      {\n        parentSpan: buildSpan,\n      }\n    )\n    validateEnginesActivity.start()\n    try {\n      await validateEngines(store.getState().program.directory)\n    } catch (error) {\n      validateEnginesActivity.panic({ id: `98001`, context: {}, error })\n    } finally {\n      validateEnginesActivity.end()\n    }\n  }\n\n  const cacheActivity = report.activityTimer(`Caching Webpack compilations`, {\n    parentSpan: buildSpan,\n  })\n  try {\n    cacheActivity.start()\n    await Promise.all([\n      closeJavascriptBundleCompilation?.(),\n      closeHTMLBundleCompilation?.(),\n      closePartialHydrationBundleCompilation?.(),\n    ])\n  } finally {\n    cacheActivity.end()\n  }\n\n  const graphqlRunner = new GraphQLRunner(store, {\n    collectStats: true,\n    graphqlTracing: program.graphqlTracing,\n  })\n\n  const { queryIds } = await calculateDirtyQueries({ store })\n\n  // Only run queries with mode SSG\n\n  queryIds.pageQueryIds = queryIds.pageQueryIds.filter(\n    query => getPageMode(query) === `SSG`\n  )\n\n  // Start saving page.mode in the main process (while queries run in workers in parallel)\n  const waitMaterializePageMode = materializePageMode()\n\n  let waitForWorkerPoolRestart = Promise.resolve()\n  if (process.env.GATSBY_EXPERIMENTAL_PARALLEL_QUERY_RUNNING) {\n    await runQueriesInWorkersQueue(workerPool, queryIds, {\n      parentSpan: buildSpan,\n    })\n    // Jobs still might be running even though query running finished\n    await Promise.all([\n      waitUntilAllJobsComplete(),\n      waitUntilWorkerJobsAreComplete(),\n    ])\n    // Restart worker pool before merging state to lower memory pressure while merging state\n    waitForWorkerPoolRestart = workerPool.restart()\n    await mergeWorkerState(workerPool, buildSpan)\n  } else {\n    await runStaticQueries({\n      queryIds,\n      parentSpan: buildSpan,\n      store,\n      graphqlRunner,\n    })\n\n    await runPageQueries({\n      queryIds,\n      graphqlRunner,\n      parentSpan: buildSpan,\n      store,\n    })\n  }\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    await writeQueryContext({\n      staticQueriesByTemplate: state.staticQueriesByTemplate,\n      components: state.components,\n    })\n  }\n\n  if (process.send && shouldGenerateEngines()) {\n    await waitMaterializePageMode\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `ENGINES_READY`,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  // create scope so we don't leak state object\n  {\n    const state = store.getState()\n    if (\n      webpackCompilationHash !== state.webpackCompilationHash ||\n      !appDataUtil.exists(publicDir)\n    ) {\n      store.dispatch({\n        type: `SET_WEBPACK_COMPILATION_HASH`,\n        payload: webpackCompilationHash,\n      })\n\n      const rewriteActivityTimer = report.activityTimer(\n        `Rewriting compilation hashes`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      rewriteActivityTimer.start()\n\n      await appDataUtil.write(publicDir, webpackCompilationHash as string)\n\n      rewriteActivityTimer.end()\n    }\n\n    if (state.html.ssrCompilationHash !== webpackSSRCompilationHash) {\n      store.dispatch({\n        type: `SET_SSR_WEBPACK_COMPILATION_HASH`,\n        payload: webpackSSRCompilationHash,\n      })\n    }\n  }\n\n  await flushPendingPageDataWrites(buildSpan)\n  markWebpackStatusAsDone()\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = (webpackAssets as Array<webpack.StatsAsset>)\n      .filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  store.dispatch(actions.setProgramStatus(`BOOTSTRAP_QUERY_RUNNING_FINISHED`))\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  if (shouldGenerateEngines()) {\n    // well, tbf we should just generate this in `.cache` and avoid deleting it :shrug:\n    program.keepPageRenderer = true\n  }\n\n  await waitForWorkerPoolRestart\n\n  const { toRegenerate, toDelete } =\n    await buildHTMLPagesAndDeleteStaleArtifacts({\n      program,\n      workerPool,\n      parentSpan: buildSpan,\n    })\n\n  await waitMaterializePageMode\n  const waitWorkerPoolEnd = Promise.all(workerPool.end())\n\n  // create scope so we don't leak state object\n  {\n    const { schema, definitions, config } = store.getState()\n    const directory = program.directory\n    const graphqlTypegenOptions = config.graphqlTypegen\n\n    // Only generate types when the option is enabled\n    if (graphqlTypegenOptions && graphqlTypegenOptions.generateOnBuild) {\n      const typegenActivity = reporter.activityTimer(\n        `Generating TypeScript types`,\n        {\n          parentSpan: buildSpan,\n        }\n      )\n      typegenActivity.start()\n\n      try {\n        await writeTypeScriptTypes(\n          directory,\n          schema,\n          definitions,\n          graphqlTypegenOptions\n        )\n      } catch (err) {\n        typegenActivity.panicOnBuild({\n          id: `12100`,\n          context: {\n            sourceMessage: err,\n          },\n        })\n      }\n\n      typegenActivity.end()\n    }\n  }\n\n  {\n    let SSGCount = 0\n    let DSGCount = 0\n    let SSRCount = 0\n    for (const page of store.getState().pages.values()) {\n      if (page.mode === `SSR`) {\n        SSRCount++\n      } else if (page.mode === `DSG`) {\n        DSGCount++\n      } else {\n        SSGCount++\n      }\n    }\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      pagesCount: toRegenerate.length, // number of html files that will be written\n      totalPagesCount: store.getState().pages.size, // total number of pages\n      SSRCount,\n      DSGCount,\n      SSGCount,\n    })\n  }\n\n  const postBuildActivityTimer = report.activityTimer(`onPostBuild`, {\n    parentSpan: buildSpan,\n  })\n  postBuildActivityTimer.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: gatsbyNodeGraphQLFunction,\n    parentSpan: postBuildActivityTimer.span,\n  })\n  postBuildActivityTimer.end()\n\n  // Wait for any jobs that were started in onPostBuild\n  // This could occur due to queries being run which invoke sharp for instance\n  await waitUntilAllJobsComplete()\n\n  try {\n    await waitWorkerPoolEnd\n  } catch (e) {\n    report.warn(`Error when closing WorkerPool: ${e.message}`)\n  }\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  const state = store.getState()\n  reporter._renderPageTree({\n    components: state.components,\n    functions: state.functions,\n    pages: state.pages,\n    root: state.program.directory,\n  })\n\n  if (process.send) {\n    const gatsbyCloudConfig = constructConfigObject(state.config)\n\n    process.send({\n      type: `LOG_ACTION`,\n      action: {\n        type: `GATSBY_CONFIG_KEYS`,\n        payload: gatsbyCloudConfig,\n        timestamp: new Date().toJSON(),\n      },\n    })\n  }\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildActivity.end()\n  if (!externalTelemetryAttributes) {\n    await stopTracer()\n  }\n\n  if (program.logPages) {\n    if (toRegenerate.length) {\n      report.info(\n        `Built pages:\\n${toRegenerate\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (toDelete.length) {\n      report.info(\n        `Deleted pages:\\n${toDelete\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (program.writeToFile) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const createdFilesContent = toRegenerate.length\n      ? `${toRegenerate.join(`\\n`)}\\n`\n      : ``\n\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n    const deletedFilesContent = toDelete.length\n      ? `${toDelete.join(`\\n`)}\\n`\n      : ``\n\n    await fs.writeFile(createdFilesPath, createdFilesContent, `utf8`)\n    report.info(`.cache/newPages.txt created`)\n\n    await fs.writeFile(deletedFilesPath, deletedFilesContent, `utf8`)\n    report.info(`.cache/deletedPages.txt created`)\n  }\n\n  showExperimentNotices()\n\n  if (await userGetsSevenDayFeedback()) {\n    showSevenDayFeedbackRequest()\n  } else if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"mappings":"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"}