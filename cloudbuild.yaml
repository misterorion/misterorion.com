steps:
  # If a cache exists, fetch it from Cloud Storage
  - id: "Fetch cache"
    name: gcr.io/cloud-builders/gcloud
    args:
      - "-c"
      - |
        (
          set -e
          gsutil hash -h yarn.lock | grep md5 | tr -s " " | awk '{print $3}' > hashed.yarn-lock
          gsutil -m cp "gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)" cache.tar.gz 2> /dev/null
          test -f cache.tar.gz
          tar -zxf cache.tar.gz
          echo "Using cache from: gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)"
        ) || true
    entrypoint: sh
  # Install Node dependencies
  - id: "Yarn install"
    name: $_BUILDERS_REPO/$_NODE_IMAGE
    entrypoint: sh
    args:
      - "-c"
      - |
        test -f cache.tar.gz || yarn install
  # Build CSS and JS
  - id: "Yarn build"
    name: $_BUILDERS_REPO/$_NODE_IMAGE
    entrypoint: yarn
    args: ["build"]
  # Push files to website bucket
  - id: "Sync to bucket"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - "-c"
      - |
        gsutil -q -m rsync -R -d -j html,js,css,txt -a public-read ./public gs://$_WEBSITE_BUCKET/
    waitFor: ["Yarn build"]
  # Set Gatsby-specific caching
  - id: "Set cache-control metadata"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - "-c"
      - |
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/**/**.html
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/**/**.txt
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/icons/**
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=31536000,immutable" gs://$_WEBSITE_BUCKET/static/**
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=31536000,immutable" gs://$_WEBSITE_BUCKET/**/**.css
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=31536000,immutable" gs://$_WEBSITE_BUCKET/**/**.js
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/manifest.webmanifest
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/sw.js
        gsutil -q -m setmeta -h "Cache-Control:public,max-age=0,must-revalidate" gs://$_WEBSITE_BUCKET/favicon*.png
    waitFor: ["Sync to bucket"]
  # Cache node_modules
  - id: "Cache node_modules"
    name: gcr.io/cloud-builders/gcloud
    entrypoint: sh
    args:
      - "-c"
      - |
        (
          set -e
          test ! -f cache.tar.gz
          tar -zcf cache.tar.gz node_modules public .cache
          gsutil -m cp cache.tar.gz "gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)"
        ) || true
    waitFor: ["Yarn build"]
