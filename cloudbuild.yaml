steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        (
          set -e
          gsutil hash -h yarn.lock | grep md5 | tr -s " " | awk '{print $3}' > hashed.yarn-lock
          gsutil -m cp "gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)" cache.tar.gz 2> /dev/null
          test -f cache.tar.gz
          tar -zxf cache.tar.gz
          echo "Using cache from: gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)"
        ) || true
    id: 'fetch-cache'
    entrypoint: sh
  - name: $_NODE_IMAGE
    args:
      - '-c'
      - |
        test -f cache.tar.gz || yarn install
    id: 'yarn-install'
    entrypoint: sh
  - name: $_NODE_IMAGE
    args:
      - build
    id: 'gatsby-build'
    entrypoint: yarn
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        gsutil -q -m rsync -R -d -a public-read ./public gs://$_WEBSITE_BUCKET/
    id: 'rsync-bucket'
    entrypoint: sh
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        (
          set -e
          test ! -f cache.tar.gz
          tar -zcf cache.tar.gz node_modules public .cache
          gsutil -m cp cache.tar.gz "gs://$_CACHE_BUCKET/$(cat hashed.yarn-lock)"
        ) || true
    id: 'save-cache'
    entrypoint: sh
