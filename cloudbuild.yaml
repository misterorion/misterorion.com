steps:
  - id: Fetch cache
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        (
          set -e
          gsutil hash -h yarn.lock | grep md5 | tr -s " " | awk '{print $3}' > hashed.yarn-lock
          gsutil -m cp "gs://$_BUCKET_CACHE/$(cat hashed.yarn-lock)" cache.tar.gz 2> /dev/null
          test -f cache.tar.gz
          tar -zxf cache.tar.gz
          echo "Using cache from: gs://$_BUCKET_CACHE/$(cat hashed.yarn-lock)"
        ) || true
  - id: Yarn build
    name: $_IMAGE_NODE
    entrypoint: sh
    args:
      - -c
      - |
        test -f cache.tar.gz || yarn install --prod --frozen-lockfile
        yarn build
    env:
      - GATSBY_TELEMETRY_DISABLED=true
      - GATSBY_FORM_ENDPOINT=${_GATSBY_FORM_ENDPOINT}
      - GATSBY_BASIC_AUTH=${_GATSBY_BASIC_AUTH}
  - id: Build and push images
    name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args:
      - -c
      - |
        docker build --build-arg CADDY_IMAGE=$_IMAGE_CADDY -t $_IMAGE_APP:$SHORT_SHA .
        echo -e "@auth {\n  path /\n  not path /robots.txt\n}" >> Caddyfile
        echo -e "basicauth @auth {\n  $$BA_USER $$BA_PASS\n}" >> Caddyfile
        sed -i "s/Allow/Disallow/g" public/robots.txt
        docker build --build-arg CADDY_IMAGE=$_IMAGE_CADDY -t $_IMAGE_APP:$SHORT_SHA-dev .
        docker push $_IMAGE_APP:$SHORT_SHA-dev
        docker push $_IMAGE_APP:$SHORT_SHA
    secretEnv: ['BA_USER', 'BA_PASS']
  - id: Update manifests
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        gcloud source repos clone $_REPO_DEPLOYMENTS
        cd $_REPO_DEPLOYMENTS/$_SITE && \
        git checkout -b dev && \
        sed "s/COMMIT_SHA/$SHORT_SHA-dev/g" $_MANIFEST_DEV.tpl > $_MANIFEST_DEV && \
        sed "s/COMMIT_SHA/$SHORT_SHA/g" $_MANIFEST_PROD.tpl > $_MANIFEST_PROD && \
        git add $_MANIFEST_DEV $_MANIFEST_PROD && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)') && \
        git config user.name "$_BOT_NAME" && \
        git commit -m "Update images for commit $SHORT_SHA" && \
        git push origin dev
  - id: Cache node_modules
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - -c
      - |
        (
          set -e
          test ! -f cache.tar.gz
          tar -zcf cache.tar.gz node_modules public .cache
          gsutil -m cp cache.tar.gz "gs://$_BUCKET_CACHE/$(cat hashed.yarn-lock)"
        ) || true
    waitFor:
      - Yarn build
availableSecrets:
  secretManager:
    - versionName: projects/mechapower/secrets/BA_USER/versions/latest
      env: BA_USER
    - versionName: projects/mechapower/secrets/BA_PASS/versions/latest
      env: BA_PASS
